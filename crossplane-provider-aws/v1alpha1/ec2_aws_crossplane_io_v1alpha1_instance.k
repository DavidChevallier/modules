"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is a managed resource that represents a specified number of AWS EC2 Instance

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1InstanceSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1InstanceSpec

    status?: Ec2AwsCrossplaneIoV1alpha1InstanceStatus


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpec:
    """
    An InstanceSpec defines the desired state of Instances.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProvider:
    """
    InstanceParameters define the desired state of the Instances

    Attributes
    ----------
    ElasticGpuSpecification : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticGpuSpecificationItems0], default is Undefined, optional
        An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the Amazon Elastic Compute Cloud User Guide.
    blockDeviceMappings : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0], default is Undefined, optional
        The block device mapping entries.
    capacityReservationSpecification : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    clientToken : str, default is Undefined, optional
        Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. 
         For more information, see Ensuring Idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html). 
         Constraints: Maximum 64 ASCII characters
    cpuOptions : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCPUOptions, default is Undefined, optional
        cpu options
    creditSpecification : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCreditSpecification, default is Undefined, optional
        credit specification
    disableAPITermination : bool, default is Undefined, optional
        If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html). Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance. 
         Default: false
    ebsOptimized : bool, default is Undefined, optional
        Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance. 
         Default: false
    elasticInferenceAccelerators : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticInferenceAcceleratorsItems0], default is Undefined, optional
        An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads. 
         You cannot specify accelerators from different generations in the same request.
    hibernationOptions : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderHibernationOptions, default is Undefined, optional
        hibernation options
    iamInstanceProfile : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIamInstanceProfile, default is Undefined, optional
        iam instance profile
    imageId : str, default is Undefined, required
        The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown). 
         Default: stop
    instanceMarketOptions : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptions, default is Undefined, optional
        instance market options
    instanceType : str, default is Undefined, optional
        The instance type. For more information, see Instance Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon Elastic Compute Cloud User Guide. 
         Default: m1.small
    ipv6AddressCount : int, default is Undefined, optional
        [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch. 
         You cannot specify this option and the network interfaces option in the same request.
    ipv6Addresses : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIPV6AddressesItems0], default is Undefined, optional
        [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch. 
         You cannot specify this option and the network interfaces option in the same request.
    kernelId : str, default is Undefined, optional
        The ID of the kernel. 
         AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide.
    keyName : str, default is Undefined, optional
        The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html). 
         If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
    launchTemplate : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLaunchTemplate, default is Undefined, optional
        launch template
    licenseSpecifications : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLicenseSpecificationsItems0], default is Undefined, optional
        The Amazon Resource Name (ARN) of the license configuration
    metadataOptions : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMonitoring, default is Undefined, optional
        monitoring
    networkInterfaces : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0], default is Undefined, optional
        The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
    placement : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderPlacement, default is Undefined, optional
        placement
    privateIpAddress : str, default is Undefined, optional
        [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet. 
         Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request. 
         You cannot specify this option and the network interfaces option in the same request.
    ramDiskId : str, default is Undefined, optional
        The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID. 
         AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide.
    region : str, default is Undefined, required
        Region is the region you'd like your Instance to be created in.
    securityGroupIds : [str], default is Undefined, optional
        The IDs of the security groups. You can create a security group using CreateSecurityGroup (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html). 
         If you specify a network interface, you must specify any security groups as part of the network interface.
    securityGroupRefs : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0], default is Undefined, optional
        SecurityGroupsRefs is a list of references to SecurityGroups used to set the SecurityGroupIDs.
    securityGroupSelector : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelector, default is Undefined, optional
        security group selector
    subnetId : str, default is Undefined, optional
        [EC2-VPC] The ID of the subnet to launch the instance into. 
         If you specify a network interface, you must specify any subnets as part of the network interface.
    subnetIdRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tagSpecifications : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).
    tags : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagsItems0], default is Undefined, optional
        Tags are used as identification helpers between AWS resources.
    userData : str, default is Undefined, optional
        The user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) (Linux) and Adding User Data (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data) (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
    """


    ElasticGpuSpecification?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticGpuSpecificationItems0]

    blockDeviceMappings?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0]

    capacityReservationSpecification?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecification

    clientToken?: str

    cpuOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCPUOptions

    creditSpecification?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCreditSpecification

    disableAPITermination?: bool

    ebsOptimized?: bool

    elasticInferenceAccelerators?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticInferenceAcceleratorsItems0]

    hibernationOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderHibernationOptions

    iamInstanceProfile?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIamInstanceProfile

    imageId: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptions

    instanceType?: str

    ipv6AddressCount?: int

    ipv6Addresses?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIPV6AddressesItems0]

    kernelId?: str

    keyName?: str

    launchTemplate?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLaunchTemplate

    licenseSpecifications?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLicenseSpecificationsItems0]

    metadataOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMetadataOptions

    monitoring?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMonitoring

    networkInterfaces?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0]

    placement?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderPlacement

    privateIpAddress?: str

    ramDiskId?: str

    region: str

    securityGroupIds?: [str]

    securityGroupRefs?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0]

    securityGroupSelector?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelector

    subnetId?: str

    subnetIdRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelector

    tagSpecifications?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0]

    tags?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagsItems0]

    userData?: str


    check:
        regex.match(str(userData), r"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$") if userData


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0:
    """
    BlockDeviceMapping describes a block device mapping.

    Attributes
    ----------
    deviceName : str, default is Undefined, required
        The device name (for example, /dev/sdh or xvdh).
    ebs : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0Ebs, default is Undefined, required
        ebs
    noDevice : str, default is Undefined, optional
        Suppresses the specified device included in the block device mapping of the AMI.
    virtualName : str, default is Undefined, optional
        The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume. 
         NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect. 
         Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.
    """


    deviceName: str

    ebs: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0Ebs

    noDevice?: str

    virtualName?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0Ebs:
    """
    Parameters used to automatically set up EBS volumes when the instance is launched.

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the Amazon Elastic Compute Cloud User Guide.
    encrypted : bool, default is Undefined, optional
        Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters) in the Amazon Elastic Compute Cloud User Guide. 
         In no case can you remove encryption from an encrypted volume. 
         Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances). 
         This parameter is not returned by .
    iops : int, default is Undefined, optional
        The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon Elastic Compute Cloud User Guide. 
         Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon Elastic Compute Cloud User Guide. 
         Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes.
    kmsKeyId : str, default is Undefined, optional
        Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted. 
         This parameter is only supported on BlockDeviceMapping objects called by RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html), RequestSpotFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html), and RequestSpotInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html).
    kmsKeyIdRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    snapshotId : str, default is Undefined, optional
        The ID of the snapshot.
    volumeSize : int, default is Undefined, required
        The size of the volume, in GiB. 
         Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size. 
         Constraints: 1-16384 for General Purpose SSD (gp2), 4-16384 for Provisioned IOPS SSD (io1), 500-16384 for Throughput Optimized HDD (st1), 500-16384 for Cold HDD (sc1), and 1-1024 for Magnetic (standard) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.
    volumeType : str, default is Undefined, optional
        The volume type. If you set the type to io1, you must also specify the Iops parameter. If you set the type to gp2, st1, sc1, or standard, you must omit the Iops parameter. 
         Default: gp2
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: int

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector

    snapshotId?: str

    volumeSize: int

    volumeType?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef:
    """
    KMSKeyIDRef is a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector:
    """
    KMSKeyIDSelector selects a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCPUOptions:
    """
    The CPU options for the instance. For more information, see Optimizing CPU Options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon Elastic Compute Cloud User Guide.

    Attributes
    ----------
    coreCount : int, default is Undefined, required
        The number of CPU cores for the instance.
    threadsPerCore : int, default is Undefined, required
        The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.
    """


    coreCount: int

    threadsPerCore: int


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecification:
    """
    Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).

    Attributes
    ----------
    capacityReservationTarget : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    capacityReservationsPreference : str, default is Undefined, required
        Indicates the instance's Capacity Reservation preferences. Possible preferences include: 
         * open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). 
         * none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.
    """


    capacityReservationTarget?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecificationCapacityReservationTarget

    capacityReservationsPreference: "open" | "none"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCapacityReservationSpecificationCapacityReservationTarget:
    """
    Information about the target Capacity Reservation.

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The ID of the Capacity Reservation.
    """


    capacityReservationId?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderCreditSpecification:
    """
    The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html). For more information, see Burstable Performance Instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the Amazon Elastic Compute Cloud User Guide. 
     Default: standard (T2 instances) or unlimited (T3/T3a instances)

    Attributes
    ----------
    cpuCredits : str, default is Undefined, required
        The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited. 
         CPUCredits is a required field
    """


    cpuCredits: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticGpuSpecificationItems0:
    """
    ElasticGPUSpecification is a specification for an Elastic Graphics accelerator.

    Attributes
    ----------
    $type : str, default is Undefined, required
        The type of Elastic Graphics accelerator. For more information about the values to specify for Type, see Elastic Graphics Basics (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics), specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances. 
         Type is a required field
    """


    $type: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderElasticInferenceAcceleratorsItems0:
    """
    ElasticInferenceAccelerator describes an elastic inference accelerator.

    Attributes
    ----------
    count : int, default is Undefined, optional
        The number of elastic inference accelerators to attach to the instance. 
         Default: 1
    $type : str, default is Undefined, required
        The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge. 
         Type is a required field
    """


    count?: int

    $type: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderHibernationOptions:
    """
    Indicates whether an instance is enabled for hibernation. For more information, see Hibernate Your Instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        If you set this parameter to true, your instance is enabled for hibernation. 
         Default: false
    """


    configured?: bool


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIPV6AddressesItems0:
    """
    InstanceIPv6Address describes an IPv6 address.

    Attributes
    ----------
    ipv6Address : str, default is Undefined, required
        The IPv6 address.
    """


    ipv6Address: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderIamInstanceProfile:
    """
    The IAM instance profile.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the instance profile.
    name : str, default is Undefined, optional
        The name of the instance profile.
    """


    arn?: str

    name?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptions:
    """
    The market (purchasing) option for the instances. 
     For RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.

    Attributes
    ----------
    marketType : str, default is Undefined, required
        The market type.
    spotOptions : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptionsSpotOptions, default is Undefined, required
        spot options
    """


    marketType: str

    spotOptions: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptionsSpotOptions


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderInstanceMarketOptionsSpotOptions:
    """
    The options for Spot Instances.

    Attributes
    ----------
    blockDurationMinutes : int, default is Undefined, optional
        The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
    instanceInterruptionBehavior : str, default is Undefined, required
        The behavior when a Spot Instance is interrupted. The default is terminate.
    maxPrice : str, default is Undefined, optional
        The maximum hourly price you're willing to pay for the Spot Instances. The default is the On-Demand price.
    spotInstanceType : str, default is Undefined, required
        The Spot Instance request type. For RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances), persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.
    validUntil : str, default is Undefined, optional
        The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date. Must be in UTC format (YYYY-MM-DDTHH:MM:SSZ)
    """


    blockDurationMinutes?: int

    instanceInterruptionBehavior: "hibernate" | "stop" | "terminate"

    maxPrice?: str

    spotInstanceType: "one-time" | "persistent"

    validUntil?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLaunchTemplate:
    """
    The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, required
        The ID of the launch template.
    launchTemplateName : str, default is Undefined, required
        The name of the launch template.
    version : str, default is Undefined, optional
        The version number of the launch template. 
         Default: The default version for the launch template.
    """


    launchTemplateId: str

    launchTemplateName: str

    version?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderLicenseSpecificationsItems0:
    """
    LicenseConfigurationRequest describes a license configuration

    Attributes
    ----------
    licenseConfigurationArn : str, default is Undefined, required
        Amazon Resource Name (ARN) of the license configuration
    """


    licenseConfigurationArn: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMetadataOptions:
    """
    The metadata options for the instance. For more information, see Instance Metadata and User Data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled. 
         If you specify a value of disabled, you will not be able to access your instance metadata.
    httpPutResponseHopLimit : int, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. 
         Default: 1 
         Possible values: Integers from 1 to 64
    httpTokens : str, default is Undefined, required
        The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional. 
         If the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned. 
         If the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.
    """


    httpEndpoint?: "enabled" | "disabled"

    httpPutResponseHopLimit?: int

    httpTokens: "optional" | "required"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderMonitoring:
    """
    Specifies whether detailed monitoring is enabled for the instance.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled. 
         Enabled is a required field
    """


    enabled: bool


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0:
    """
    InstanceNetworkInterfaceSpecification describes a network interface.

    Attributes
    ----------
    associatePublicIpAddress : bool, default is Undefined, optional
        Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true.
    deleteOnTermination : bool, default is Undefined, optional
        If set to true, the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.
    description : str, default is Undefined, optional
        The description of the network interface. Applies only if creating a network interface when launching an instance.
    deviceIndex : int, default is Undefined, required
        The position of the network interface in the attachment order. A primary network interface has a device index of 0. 
         If you specify a network interface when launching an instance, you must specify the device index.
    groups : [str], default is Undefined, required
        The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.
    interfaceType : str, default is Undefined, required
        The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa. For more information, see Elastic Fabric Adapter (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html) in the Amazon Elastic Compute Cloud User Guide. 
         If you are not creating an EFA, specify interface or omit this parameter. 
         Valid values: interface | efa
    ipv6AddressCount : int, default is Undefined, optional
        A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.
    ipv6Addresses : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0IPV6AddressesItems0], default is Undefined, optional
        One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface. 
         If you are creating a Spot Fleet, omit this parameter because you can’t specify a network interface ID in a launch specification.
    privateIpAddress : str, default is Undefined, optional
        The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.
    privateIpAddresses : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0PrivateIPAddressesItems0], default is Undefined, optional
        One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.
    secondaryPrivateIpAddressCount : int, default is Undefined, optional
        The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.
    subnetId : str, default is Undefined, optional
        The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.
    """


    associatePublicIpAddress?: bool

    deleteOnTermination?: bool

    description?: str

    deviceIndex: int

    groups: [str]

    interfaceType: "interface" | "efa"

    ipv6AddressCount?: int

    ipv6Addresses?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0IPV6AddressesItems0]

    networkInterfaceId?: str

    privateIpAddress?: str

    privateIpAddresses?: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0PrivateIPAddressesItems0]

    secondaryPrivateIpAddressCount?: int

    subnetId?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0IPV6AddressesItems0:
    """
    InstanceIPv6Address describes an IPv6 address.

    Attributes
    ----------
    ipv6Address : str, default is Undefined, required
        The IPv6 address.
    """


    ipv6Address: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderNetworkInterfacesItems0PrivateIPAddressesItems0:
    """
    PrivateIPAddressSpecification describes a secondary private IPv4 address for a network interface.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
    privateIPAddress : str, default is Undefined, required
        The private IPv4 addresses.
    """


    primary?: bool

    privateIPAddress: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderPlacement:
    """
    The placement for the instance.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    availabilityZone : str, default is Undefined, optional
        The Availability Zone of the instance. 
         If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    groupName : str, default is Undefined, required
        The name of the placement group the instance is in.
    hostId : str, default is Undefined, optional
        The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    hostResourceGroupArn : str, default is Undefined, optional
        The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    partitionNumber : int, default is Undefined, optional
        The number of the partition the instance is in. Valid only if the placement group strategy is set to partition. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    spreadDomain : str, default is Undefined, optional
        Reserved for future use. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    tenancy : str, default is Undefined, optional
        The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    """


    affinity?: str

    availabilityZone?: str

    groupName: str

    hostId?: str

    hostResourceGroupArn?: str

    partitionNumber?: int

    spreadDomain?: str

    tenancy?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0Policy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelector:
    """
    SecurityGroupsSelector selects references to SecurityGroups used to set the SecurityGroupIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSecurityGroupSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRef:
    """
    SubnetIDRef is a reference to a Subnet used to set the SubnetID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelector:
    """
    SubnetIDSelector selects a reference to a Subnet used to set the SubnetID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0:
    """
    TagSpecification defines the tags to apply to a resource when the resource is being created.

    Attributes
    ----------
    resourceType : str, default is Undefined, required
        The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log. 
         To tag a resource after it has been created, see CreateTags (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).
    tags : [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0TagsItems0], default is Undefined, required
        The tags to apply to the resource
    """


    resourceType: "capacity-reservation" | "client-vpn-endpoint" | "dedicated-host" | "fleet" | "fpga-image" | "instance" | "ipv4pool-ec2" | "ipv6pool-ec2" | "key-pair" | "launch-template" | "natgateway" | "spot-fleet-request" | "placement-group" | "snapshot" | "traffic-mirror-filter" | "traffic-mirror-session" | "traffic-mirror-target" | "transit-gateway" | "transit-gateway-attachment" | "transit-gateway-route-table" | "vpc-endpoint" | "vpc-endpoint-service" | "volume" | "vpc-flow-log"

    tags: [Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0TagsItems0]


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagSpecificationsItems0TagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatus:
    """
    An InstanceStatus represents the observed state of Instances.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProvider:
    """
    InstanceObservation keeps the state for the external resource. The below fields follow the Instance response object as closely as possible.

    Attributes
    ----------
    amiLaunchIndex : int, default is Undefined, optional
        ami launch index
    architecture : str, default is Undefined, required
        architecture
    blockDeviceMapping : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0], default is Undefined, optional
        block device mapping
    capacityReservationId : str, default is Undefined, optional
        capacity reservation Id
    capacityReservationSpecification : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    clientToken : str, default is Undefined, optional
        client token
    cpuOptions : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCPUOptions, default is Undefined, optional
        cpu options
    ebs : str, default is Undefined, optional
        ebs
    ebsOptimized : bool, default is Undefined, optional
        ebs optimized
    elasticGpuAssociation : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticGpuAssociationItems0], default is Undefined, optional
        elastic gpu association
    elasticInferenceAcceleratorAssociations : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticInferenceAcceleratorAssociationsItems0], default is Undefined, optional
        elastic inference accelerator associations
    enaSupport : bool, default is Undefined, optional
        ena support
    hibernationOptions : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderHibernationOptions, default is Undefined, optional
        hibernation options
    hypervisor : str, default is Undefined, optional
        hypervisor
    iamInstanceProfile : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderIamInstanceProfile, default is Undefined, optional
        iam instance profile
    imageId : str, default is Undefined, optional
        image Id
    instanceId : str, default is Undefined, optional
        instance Id
    instanceLifecyle : str, default is Undefined, optional
        instance lifecyle
    instanceType : str, default is Undefined, required
        Supported instance family when set instanceInterruptionBehavior to hibernate C3, C4, C5, M4, M5, R3, R4
    kernelId : str, default is Undefined, optional
        kernel Id
    launchTime : str, default is Undefined, optional
        launch time
    licenseSet : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderLicenseSetItems0], default is Undefined, optional
        license set
    metadataOptions : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMonitoring, default is Undefined, optional
        monitoring
    networkInterfaces : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0], default is Undefined, optional
        network interfaces
    outpostArn : str, default is Undefined, optional
        outpost arn
    placement : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderPlacement, default is Undefined, optional
        placement
    platform : str, default is Undefined, required
        platform
    privateDnsName : str, default is Undefined, optional
        private Dns name
    privateIpAddress : str, default is Undefined, optional
        private Ip address
    productCodes : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderProductCodesItems0], default is Undefined, optional
        product codes
    publicDnsName : str, default is Undefined, optional
        public Dns name
    publicIpAddress : str, default is Undefined, optional
        public Ip address
    ramDiskId : str, default is Undefined, optional
        ram disk Id
    rootDeviceType : str, default is Undefined, required
        root device type
    securityGroups : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderSecurityGroupsItems0], default is Undefined, optional
        security groups
    sourceDestCheck : bool, default is Undefined, optional
        source dest check
    spotInstanceId : str, default is Undefined, optional
        spot instance Id
    sriovNetSupport : str, default is Undefined, optional
        sriov net support
    state : str, default is Undefined, required
        state
    stateReason : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderStateReason, default is Undefined, optional
        state reason
    stateTransitionReason : str, default is Undefined, optional
        state transition reason
    subnetId : str, default is Undefined, optional
        subnet Id
    tags : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderTagsItems0], default is Undefined, optional
        tags
    virualizationType : str, default is Undefined, required
        virualization type
    vpcId : str, default is Undefined, optional
        vpc Id
    """


    amiLaunchIndex?: int

    architecture: str

    blockDeviceMapping?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0]

    capacityReservationId?: str

    capacityReservationSpecification?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecification

    clientToken?: str

    cpuOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCPUOptions

    ebs?: str

    ebsOptimized?: bool

    elasticGpuAssociation?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticGpuAssociationItems0]

    elasticInferenceAcceleratorAssociations?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticInferenceAcceleratorAssociationsItems0]

    enaSupport?: bool

    hibernationOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderHibernationOptions

    hypervisor?: str

    iamInstanceProfile?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderIamInstanceProfile

    imageId?: str

    instanceId?: str

    instanceLifecyle?: str

    instanceType: str

    kernelId?: str

    launchTime?: str

    licenseSet?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderLicenseSetItems0]

    metadataOptions?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMetadataOptions

    monitoring?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMonitoring

    networkInterfaces?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0]

    outpostArn?: str

    placement?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderPlacement

    platform: str

    privateDnsName?: str

    privateIpAddress?: str

    productCodes?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderProductCodesItems0]

    publicDnsName?: str

    publicIpAddress?: str

    ramDiskId?: str

    rootDeviceType: str

    securityGroups?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderSecurityGroupsItems0]

    sourceDestCheck?: bool

    spotInstanceId?: str

    sriovNetSupport?: str

    state: str

    stateReason?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderStateReason

    stateTransitionReason?: str

    subnetId?: str

    tags?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderTagsItems0]

    virualizationType: str

    vpcId?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0:
    """
    InstanceBlockDeviceMapping describes a block device mapping.

    Attributes
    ----------
    deviceName : str, default is Undefined, required
        The device name (for example, /dev/sdh or xvdh).
    ebs : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0Ebs, default is Undefined, required
        ebs
    """


    deviceName: str

    ebs: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0Ebs


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderBlockDeviceMappingItems0Ebs:
    """
    Parameters used to automatically set up EBS volumes when the instance is launched.

    Attributes
    ----------
    attachTime : str, default is Undefined, required
        The time stamp when the attachment initiated.
    deleteOnTermination : bool, default is Undefined, required
        Indicates whether the volume is deleted on instance termination.
    status : str, default is Undefined, required
        The attachment state.
    volumeId : str, default is Undefined, required
        The ID of the EBS volume.
    """


    attachTime: str

    deleteOnTermination: bool

    status: str

    volumeId: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCPUOptions:
    """
    CPUOptionsRequest defines the options for the instance. Both the core count and threads per core must be specified in the request.

    Attributes
    ----------
    coreCount : int, default is Undefined, required
        The number of CPU cores for the instance.
    threadsPerCore : int, default is Undefined, required
        The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.
    """


    coreCount: int

    threadsPerCore: int


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecification:
    """
    CapacityReservationSpecificationResponse describes the instance's Capacity Reservation targeting preferences. The action returns the capacityReservationPreference response element if the instance is configured to run in On-Demand capacity, or if it is configured in run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). The action returns the capacityReservationTarget response element if the instance explicily targets a specific Capacity Reservation.

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, required
        Describes the instance's Capacity Reservation preferences. Possible preferences include: 
         * open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). 
         * none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.
    capacityReservationTarget : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference: str

    capacityReservationTarget?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget:
    """
    Information about the targeted Capacity Reservation.

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The ID of the Capacity Reservation.
    """


    capacityReservationId?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticGpuAssociationItems0:
    """
    ElasticGPUAssociation describes the association between an instance and an Elastic Graphics accelerator.

    Attributes
    ----------
    elasticGpuAssociationId : str, default is Undefined, required
        The ID of the association.
    elasticGpuAssociationState : str, default is Undefined, required
        The state of the association between the instance and the Elastic Graphics accelerator.
    elasticGpuAssociationTime : str, default is Undefined, required
        The time the Elastic Graphics accelerator was associated with the instance.
    elasticGpuId : str, default is Undefined, required
        The ID of the Elastic Graphics accelerator.
    """


    elasticGpuAssociationId: str

    elasticGpuAssociationState: str

    elasticGpuAssociationTime: str

    elasticGpuId: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderElasticInferenceAcceleratorAssociationsItems0:
    """
    ElasticInferenceAcceleratorAssociation describes the association between an instance and an elastic inference accelerator.

    Attributes
    ----------
    elasticInferenceAcceleratorArn : str, default is Undefined, required
        The Amazon Resource Name (ARN) of the elastic inference accelerator.
    elasticInferenceAcceleratorAssociationId : str, default is Undefined, required
        The ID of the association.
    elasticInferenceAcceleratorAssociationState : str, default is Undefined, required
        The state of the elastic inference accelerator.
    elasticInferenceAcceleratorAssociationTime : str, default is Undefined, required
        The time at which the elastic inference accelerator is associated with an instance.
    """


    elasticInferenceAcceleratorArn: str

    elasticInferenceAcceleratorAssociationId: str

    elasticInferenceAcceleratorAssociationState: str

    elasticInferenceAcceleratorAssociationTime: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderHibernationOptions:
    """
    HibernationOptionsRequest indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites). For more information, see Hibernate Your Instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        If you set this parameter to true, your instance is enabled for hibernation. 
         Default: false
    """


    configured?: bool


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderIamInstanceProfile:
    """
    IAMInstanceProfile Describes an IAM instance profile.

    Attributes
    ----------
    arn : str, default is Undefined, required
        The Amazon Resource Name (ARN) of the instance profile.
    id : str, default is Undefined, required
        The ID of the instance profile.
    """


    arn: str

    id: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderLicenseSetItems0:
    """
    LicenseConfigurationRequest describes a license configuration

    Attributes
    ----------
    licenseConfigurationArn : str, default is Undefined, required
        Amazon Resource Name (ARN) of the license configuration
    """


    licenseConfigurationArn: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMetadataOptions:
    """
    InstanceMetadataOptionsRequest defines the metadata options for the instance.

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled. 
         If you specify a value of disabled, you will not be able to access your instance metadata.
    httpPutResponseHopLimit : int, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. 
         Default: 1 
         Possible values: Integers from 1 to 64
    httpTokens : str, default is Undefined, required
        The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional. 
         If the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned. 
         If the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.
    """


    httpEndpoint?: "enabled" | "disabled"

    httpPutResponseHopLimit?: int

    httpTokens: "optional" | "required"


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderMonitoring:
    """
    Monitoring describes the monitoring of an instance.

    Attributes
    ----------
    state : str, default is Undefined, required
        Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
    """


    state: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0:
    """
    InstanceNetworkInterface describes a network interface.

    Attributes
    ----------
    association : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Association, default is Undefined, optional
        association
    attachment : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Attachment, default is Undefined, optional
        attachment
    description : str, default is Undefined, optional
        The description.
    groups : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0GroupsItems0], default is Undefined, optional
        One or more security groups.
    interfaceType : str, default is Undefined, optional
        Describes the type of network interface. 
         Valid values: interface | efa
    ipv6Addresses : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0IPV6AddressesItems0], default is Undefined, optional
        One or more IPv6 addresses associated with the network interface.
    macAddress : str, default is Undefined, optional
        The MAC address.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface.
    ownerId : str, default is Undefined, optional
        The ID of the AWS account that created the network interface.
    privateDnsName : str, default is Undefined, optional
        The private DNS name.
    privateIpAddress : str, default is Undefined, optional
        The IPv4 address of the network interface within the subnet.
    privateIpAddresses : [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0], default is Undefined, optional
        One or more private IPv4 addresses associated with the network interface.
    sourceDestCheck : bool, default is Undefined, optional
        Indicates whether to validate network traffic to or from this network interface.
    status : str, default is Undefined, required
        The status of the network interface.
    subnetId : str, default is Undefined, optional
        The ID of the subnet.
    vpcId : str, default is Undefined, optional
        The ID of the VPC.
    """


    association?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Association

    attachment?: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Attachment

    description?: str

    groups?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0GroupsItems0]

    interfaceType?: str

    ipv6Addresses?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0IPV6AddressesItems0]

    macAddress?: str

    networkInterfaceId?: str

    ownerId?: str

    privateDnsName?: str

    privateIpAddress?: str

    privateIpAddresses?: [Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0]

    sourceDestCheck?: bool

    status: str

    subnetId?: str

    vpcId?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Association:
    """
    The association information for an Elastic IPv4 associated with the network interface.

    Attributes
    ----------
    ipOwnerId : str, default is Undefined, optional
        The ID of the owner of the Elastic IP address.
    publicDnsName : str, default is Undefined, optional
        The public DNS name.
    publicIp : str, default is Undefined, optional
        The public IP address or Elastic IP address bound to the network interface.
    """


    ipOwnerId?: str

    publicDnsName?: str

    publicIp?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0Attachment:
    """
    The network interface attachment.

    Attributes
    ----------
    attachTime : str, default is Undefined, optional
        The time stamp when the attachment initiated.
    attachmentId : str, default is Undefined, optional
        The ID of the network interface attachment.
    deleteOnTermination : bool, default is Undefined, optional
        Indicates whether the network interface is deleted when the instance is terminated.
    deviceIndex : int, default is Undefined, optional
        The index of the device on the instance for the network interface attachment.
    status : str, default is Undefined, optional
        The attachment state.
    """


    attachTime?: str

    attachmentId?: str

    deleteOnTermination?: bool

    deviceIndex?: int

    status?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0GroupsItems0:
    """
    GroupIdentifier describes a security group

    Attributes
    ----------
    groupId : str, default is Undefined, required
        GroupID is the security group identifier
    groupName : str, default is Undefined, required
        GroupName is the name of the security group
    """


    groupId: str

    groupName: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0IPV6AddressesItems0:
    """
    InstanceIPv6Address describes an IPv6 address.

    Attributes
    ----------
    ipv6Address : str, default is Undefined, required
        The IPv6 address.
    """


    ipv6Address: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0:
    """
    InstancePrivateIPAddress describes a private IPv4 address.

    Attributes
    ----------
    association : Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0Association, default is Undefined, required
        association
    primary : bool, default is Undefined, required
        Indicates whether this IPv4 address is the primary private IP address of the network interface.
    privateDnsName : str, default is Undefined, required
        The private IPv4 DNS name.
    privateIpAddress : str, default is Undefined, required
        The private IPv4 address of the network interface.
    """


    association: Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0Association

    primary: bool

    privateDnsName: str

    privateIpAddress: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderNetworkInterfacesItems0PrivateIPAddressesItems0Association:
    """
    The association information for an Elastic IP address for the network interface.

    Attributes
    ----------
    ipOwnerId : str, default is Undefined, optional
        The ID of the owner of the Elastic IP address.
    publicDnsName : str, default is Undefined, optional
        The public DNS name.
    publicIp : str, default is Undefined, optional
        The public IP address or Elastic IP address bound to the network interface.
    """


    ipOwnerId?: str

    publicDnsName?: str

    publicIp?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderPlacement:
    """
    Placement describes the placement of an instance.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    availabilityZone : str, default is Undefined, optional
        The Availability Zone of the instance. 
         If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    groupName : str, default is Undefined, required
        The name of the placement group the instance is in.
    hostId : str, default is Undefined, optional
        The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    hostResourceGroupArn : str, default is Undefined, optional
        The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    partitionNumber : int, default is Undefined, optional
        The number of the partition the instance is in. Valid only if the placement group strategy is set to partition. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    spreadDomain : str, default is Undefined, optional
        Reserved for future use. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    tenancy : str, default is Undefined, optional
        The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. 
         This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet).
    """


    affinity?: str

    availabilityZone?: str

    groupName: str

    hostId?: str

    hostResourceGroupArn?: str

    partitionNumber?: int

    spreadDomain?: str

    tenancy?: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderProductCodesItems0:
    """
    ProductCode describes a product code.

    Attributes
    ----------
    productCodeId : str, default is Undefined, required
        The product code.
    productCodeType : str, default is Undefined, required
        The type of product code.
    """


    productCodeId: str

    productCodeType: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderSecurityGroupsItems0:
    """
    GroupIdentifier describes a security group

    Attributes
    ----------
    groupId : str, default is Undefined, required
        GroupID is the security group identifier
    groupName : str, default is Undefined, required
        GroupName is the name of the security group
    """


    groupId: str

    groupName: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderStateReason:
    """
    StateReason describes a state change.

    Attributes
    ----------
    code : str, default is Undefined, required
        The reason code for the state change.
    message : str, default is Undefined, required
        The message for the state change. 
         * Server.InsufficientInstanceCapacity: There was insufficient capacity available to satisfy the launch request. 
         * Server.InternalError: An internal error caused the instance to terminate during launch. 
         * Server.ScheduledStop: The instance was stopped due to a scheduled retirement. 
         * Server.SpotInstanceShutdown: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price. 
         * Server.SpotInstanceTermination: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price. 
         * Client.InstanceInitiatedShutdown: The instance was shut down using the shutdown -h command from the instance. 
         * Client.InstanceTerminated: The instance was terminated or rebooted during AMI creation. 
         * Client.InternalError: A client error caused the instance to terminate during launch. 
         * Client.InvalidSnapshot.NotFound: The specified snapshot was not found. 
         * Client.UserInitiatedHibernate: Hibernation was initiated on the instance. 
         * Client.UserInitiatedShutdown: The instance was shut down using the Amazon EC2 API. 
         * Client.VolumeLimitExceeded: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.
    """


    code: str

    message: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusAtProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1alpha1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


