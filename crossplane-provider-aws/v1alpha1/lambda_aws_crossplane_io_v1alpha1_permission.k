"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Permission:
    """
    A Permission is a managed resource that represents a AWS Lambda Permission.

    Attributes
    ----------
    apiVersion : str, default is "lambda.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Permission", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaAwsCrossplaneIoV1alpha1PermissionSpec, default is Undefined, required
        spec
    status : LambdaAwsCrossplaneIoV1alpha1PermissionStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.aws.crossplane.io/v1alpha1" = "lambda.aws.crossplane.io/v1alpha1"

    kind: "Permission" = "Permission"

    metadata?: v1.ObjectMeta

    spec: LambdaAwsCrossplaneIoV1alpha1PermissionSpec

    status?: LambdaAwsCrossplaneIoV1alpha1PermissionStatus


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpec:
    """
    A PermissionSpec defines the desired state of a Permission.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LambdaAwsCrossplaneIoV1alpha1PermissionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProvider

    providerConfigRef?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRef

    providerRef?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRef

    publishConnectionDetailsTo?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecWriteConnectionSecretToRef


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProvider:
    """
    PermissionParameters define the desired state of a Lambda Permission

    Attributes
    ----------
    action : str, default is Undefined, required
        The action that the principal can use on the function. For example, lambda:InvokeFunction or lambda:GetFunction. 
         This member is required.
    eventSourceToken : str, default is Undefined, optional
        For Alexa Smart Home functions, a token that must be supplied by the invoker.
    functionName : str, default is Undefined, optional
        The name of the Lambda function, version, or alias. Name formats 
         * Function name - my-function (name-only), my-function:v1 (with alias). 
         * Function ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function. 
         * Partial ARN - 123456789012:function:my-function. 
         You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length. 
         This member is required.
    functionNameRef : LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRef, default is Undefined, optional
        function name ref
    functionNameSelector : LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelector, default is Undefined, optional
        function name selector
    principal : str, default is Undefined, required
        The Amazon Web Services service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service. 
         This member is required.
    principalOrgId : str, default is Undefined, optional
        The identifier for your organization in Organizations. Use this to grant permissions to all the Amazon Web Services accounts under this organization.
    region : str, default is Undefined, required
        Region is which region the Function will be created.
    sourceARN : str, default is Undefined, optional
        For Amazon Web Services services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic. Note that Lambda configures the comparison using the StringLike operator.
    sourceAccount : str, default is Undefined, optional
        For Amazon S3, the ID of the account that owns the resource. Use this together with SourceArn to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.
    """


    action: str

    eventSourceToken?: str

    functionName?: str

    functionNameRef?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRef

    functionNameSelector?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelector

    principal: str

    principalOrgId?: str

    region: str

    sourceARN?: str

    sourceAccount?: str


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRef:
    """
    FunctionNameRef is a reference to a function used to set the FunctionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRefPolicy


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelector:
    """
    FunctionNameSelector selects references to function used to set the FunctionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelectorPolicy


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecForProviderFunctionNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRefPolicy


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRefPolicy


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRef

    metadata?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToMetadata

    name: str


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRefPolicy


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LambdaAwsCrossplaneIoV1alpha1PermissionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LambdaAwsCrossplaneIoV1alpha1PermissionStatus:
    """
    A PermissionStatus represents the observed state of a ElasticIP.

    Attributes
    ----------
    atProvider : LambdaAwsCrossplaneIoV1alpha1PermissionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LambdaAwsCrossplaneIoV1alpha1PermissionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: LambdaAwsCrossplaneIoV1alpha1PermissionStatusAtProvider

    conditions?: [LambdaAwsCrossplaneIoV1alpha1PermissionStatusConditionsItems0]


schema LambdaAwsCrossplaneIoV1alpha1PermissionStatusAtProvider:
    """
    PermissionObservation keeps the state for the external resource

    Attributes
    ----------
    revisionId : str, default is Undefined, optional
        revision Id
    """


    revisionId?: str


schema LambdaAwsCrossplaneIoV1alpha1PermissionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


