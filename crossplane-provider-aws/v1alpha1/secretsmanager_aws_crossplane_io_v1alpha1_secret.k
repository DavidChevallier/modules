"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Secret:
    """
    Secret is the Schema for the Secrets API

    Attributes
    ----------
    apiVersion : str, default is "secretsmanager.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Secret", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpec, default is Undefined, required
        spec
    status : SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatus, default is Undefined, optional
        status
    """


    apiVersion: "secretsmanager.aws.crossplane.io/v1alpha1" = "secretsmanager.aws.crossplane.io/v1alpha1"

    kind: "Secret" = "Secret"

    metadata?: v1.ObjectMeta

    spec: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpec

    status?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatus


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpec:
    """
    SecretSpec defines the desired state of Secret

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProvider

    providerConfigRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRef

    providerRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRef

    publishConnectionDetailsTo?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecWriteConnectionSecretToRef


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProvider:
    """
    SecretParameters defines the desired state of Secret

    Attributes
    ----------
    binarySecretRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderBinarySecretRef, default is Undefined, optional
        binary secret ref
    description : str, default is Undefined, optional
        (Optional) Specifies a user-provided description of the secret.
    forceDeleteWithoutRecovery : bool, default is Undefined, optional
        (Optional) Specifies that the secret is to be deleted without any recovery window. You can't use both this parameter and the RecoveryWindowInDays parameter in the same API call. 
         An asynchronous background process performs the actual deletion, so there can be a short delay before the operation completes. If you write code to delete and then immediately recreate a secret with the same name, ensure that your code includes appropriate back off and retry logic. 
         Use this parameter with caution. This parameter causes the operation to skip the normal waiting period before the permanent deletion that AWS would normally impose with the RecoveryWindowInDays parameter. If you delete a secret with the ForceDeleteWithouRecovery parameter, then you have no opportunity to recover the secret. It is permanently lost.
    kmsKeyID : str, default is Undefined, optional
        (Optional) Specifies the ARN, Key ID, or alias of the AWS KMS customer master key (CMK) to be used to encrypt the SecretString or SecretBinary values in the versions stored in this secret. 
         You can specify any of the supported ways to identify a AWS KMS key ID. If you need to reference a CMK in a different account, you can use only the key ARN or the alias ARN. 
         If you don't specify this value, then Secrets Manager defaults to using the AWS account's default CMK (the one named aws/secretsmanager). If a AWS KMS CMK with that name doesn't yet exist, then Secrets Manager creates it for you automatically the first time it needs to encrypt a version's SecretString or SecretBinary fields. 
         You can use the account default CMK to encrypt and decrypt only if you call this operation using credentials from the same account that owns the secret. If the secret resides in a different account, then you must create a custom CMK and specify the ARN in this field.
    kmsKeyIDRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key ID ref
    kmsKeyIDSelector : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key ID selector
    recoveryWindowInDays : int, default is Undefined, optional
        (Optional) Specifies the number of days that Secrets Manager waits before it can delete the secret. You can't use both this parameter and the ForceDeleteWithoutRecovery parameter in the same API call. 
         This value can range from 7 to 30 days. The default value is 30.
    region : str, default is Undefined, required
        Region is which region the Secret will be created.
    resourcePolicy : str, default is Undefined, optional
        A JSON-formatted string constructed according to the grammar and syntax for an Amazon Web Services resource-based policy. The policy in the string identifies who can access or manage this secret and its versions. For information on how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters (http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json) in the CLI User Guide. 
         ResourcePolicy is a required field
    stringSecretRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderStringSecretRef, default is Undefined, optional
        string secret ref
    tags : [SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderTagsItems0], default is Undefined, optional
        (Optional) Specifies a list of user-defined tags that are attached to the secret. Each tag is a "Key" and "Value" pair of strings. This operation only appends tags to the existing list of tags. To remove tags, you must use UntagResource. 
         * Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different tag from one with key "abc". 
         * If you check tags in IAM policy Condition elements as part of your security strategy, then adding or removing a tag can change permissions. If the successful completion of this operation would result in you losing your permissions for this secret, then this operation is blocked and returns an Access Denied error. 
         This parameter requires a JSON text string argument. For information on how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters (https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json) in the AWS CLI User Guide. For example: 
         [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}] 
         If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text. 
         The following basic restrictions apply to tags: 
         * Maximum number of tags per secret—50 
         * Maximum key length—127 Unicode characters in UTF-8 
         * Maximum value length—255 Unicode characters in UTF-8 
         * Tag keys and values are case sensitive. 
         * Do not use the aws: prefix in your tag names or values because AWS reserves it for AWS use. You can't edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit. 
         * If you use your tagging schema across multiple services and resources, remember other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.
    """


    binarySecretRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderBinarySecretRef

    description?: str

    forceDeleteWithoutRecovery?: bool

    kmsKeyID?: str

    kmsKeyIDRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRef

    kmsKeyIDSelector?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelector

    recoveryWindowInDays?: int

    region: str

    resourcePolicy?: str

    stringSecretRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderStringSecretRef

    tags?: [SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderTagsItems0]


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderBinarySecretRef:
    """
    BinarySecretRef points to the Kubernetes Secret whose data will be encoded as binary data to AWS. If key parameter is given, only the value of that key will be used. Otherwise, all data in the Secret will be marshalled into JSON and sent to AWS. Either StringSecretRef or BinarySecretRef must be set, but not both.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key whose value will be used. If not given, the whole map in the Secret data will be used.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key?: str

    name: str

    namespace: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRef:
    """
    KMSKeyIDRef is a reference to an kms/v1alpha1.Key used to set the KMSKeyID field.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRefPolicy


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelector:
    """
    KMSKeyIDSelector selects references to kms/v1alpha1.Key used to set the KMSKeyID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelectorPolicy


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderKmsKeyIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderStringSecretRef:
    """
    StringSecretRef points to the Kubernetes Secret whose data will be sent as string to AWS. If key parameter is given, only the value of that key will be used. Otherwise, all data in the Secret will be marshalled into JSON and sent to AWS. Either StringSecretRef or BinarySecretRef must be set, but not both.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key whose value will be used. If not given, the whole map in the Secret data will be used.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key?: str

    name: str

    namespace: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecForProviderTagsItems0:
    """
    secretsmanager aws crossplane io v1alpha1 secret spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRefPolicy


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRefPolicy


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef

    metadata?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata

    name: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatus:
    """
    SecretStatus defines the observed state of Secret.

    Attributes
    ----------
    atProvider : SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusAtProvider

    conditions?: [SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusConditionsItems0]


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusAtProvider:
    """
    SecretObservation defines the observed state of Secret

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret that you just created. 
         Secrets Manager automatically adds several random characters to the name at the end of the ARN when you initially create a secret. This affects only the ARN and not the actual friendly name. This ensures that if you create a new secret with the same name as an old secret that you previously deleted, then users with access to the old secret don't automatically get access to the new secret because the ARNs are different.
    """


    arn?: str


schema SecretsmanagerAwsCrossplaneIoV1alpha1SecretStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


