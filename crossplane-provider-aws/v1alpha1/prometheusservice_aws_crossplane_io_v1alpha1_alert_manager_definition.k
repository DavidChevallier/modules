"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AlertManagerDefinition:
    """
    AlertManagerDefinition is the Schema for the AlertManagerDefinitions API

    Attributes
    ----------
    apiVersion : str, default is "prometheusservice.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AlertManagerDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpec, default is Undefined, required
        spec
    status : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatus, default is Undefined, optional
        status
    """


    apiVersion: "prometheusservice.aws.crossplane.io/v1alpha1" = "prometheusservice.aws.crossplane.io/v1alpha1"

    kind: "AlertManagerDefinition" = "AlertManagerDefinition"

    metadata?: v1.ObjectMeta

    spec: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpec

    status?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatus


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpec:
    """
    AlertManagerDefinitionSpec defines the desired state of AlertManagerDefinition

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProvider

    providerConfigRef?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRef

    providerRef?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRef

    publishConnectionDetailsTo?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecWriteConnectionSecretToRef


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProvider:
    """
    AlertManagerDefinitionParameters defines the desired state of AlertManagerDefinition

    Attributes
    ----------
    data : str, default is Undefined, required
        The alert manager definition data.
    region : str, default is Undefined, required
        Region is which region the AlertManagerDefinition will be created.
    workspaceId : str, default is Undefined, optional
        workspaceID is the ID for the Workspace.
    workspaceIdRef : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRef, default is Undefined, optional
        workspace Id ref
    workspaceIdSelector : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelector, default is Undefined, optional
        workspace Id selector
    """


    data: str

    region: str

    workspaceId?: str

    workspaceIdRef?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRef

    workspaceIdSelector?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelector


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRef:
    """
    WorkspaceIDRef is a reference to a Workspace used to set the workspaceID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelector:
    """
    WorkspaceIDSelector selects references to Workspace used to set the workspaceID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelectorPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecForProviderWorkspaceIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRef

    metadata?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToMetadata

    name: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatus:
    """
    AlertManagerDefinitionStatus defines the observed state of AlertManagerDefinition.

    Attributes
    ----------
    atProvider : PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusAtProvider

    conditions?: [PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusConditionsItems0]


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusAtProvider:
    """
    AlertManagerDefinitionObservation defines the observed state of AlertManagerDefinition

    Attributes
    ----------
    statusCode : str, default is Undefined, optional
        Status code of this definition.
    statusReason : str, default is Undefined, optional
        The reason for failure if any.
    """


    statusCode?: str

    statusReason?: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1AlertManagerDefinitionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


