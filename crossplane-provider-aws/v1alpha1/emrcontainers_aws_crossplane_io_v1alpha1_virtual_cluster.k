"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualCluster:
    """
    VirtualCluster is the Schema for the VirtualClusters API

    Attributes
    ----------
    apiVersion : str, default is "emrcontainers.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpec, default is Undefined, required
        spec
    status : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "emrcontainers.aws.crossplane.io/v1alpha1" = "emrcontainers.aws.crossplane.io/v1alpha1"

    kind: "VirtualCluster" = "VirtualCluster"

    metadata?: v1.ObjectMeta

    spec: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpec

    status?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatus


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpec:
    """
    VirtualClusterSpec defines the desired state of VirtualCluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProvider

    providerConfigRef?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRef

    providerRef?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRef

    publishConnectionDetailsTo?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecWriteConnectionSecretToRef


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProvider:
    """
    VirtualClusterParameters defines the desired state of VirtualCluster

    Attributes
    ----------
    containerProvider : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProvider, default is Undefined, required
        container provider
    region : str, default is Undefined, required
        Region is which region the VirtualCluster will be created.
    tags : {str:str}, default is Undefined, optional
        The tags assigned to the virtual cluster.
    """


    containerProvider: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProvider

    region: str

    tags?: {str:str}


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProvider:
    """
    The container provider of the virtual cluster.

    Attributes
    ----------
    id : str, default is Undefined, optional
        id
    info : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfo, default is Undefined, optional
        info
    type_ : str, default is Undefined, optional
        type
    """


    id?: str

    info?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfo

    type_?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfo:
    """
    The information about the container used for a job run or a managed endpoint.

    Attributes
    ----------
    eksInfo : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfoEksInfo, default is Undefined, optional
        eks info
    """


    eksInfo?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfoEksInfo


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecForProviderContainerProviderInfoEksInfo:
    """
    The information about the EKS cluster.

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        namespace
    """


    namespace?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatus:
    """
    VirtualClusterStatus defines the observed state of VirtualCluster.

    Attributes
    ----------
    atProvider : EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusAtProvider

    conditions?: [EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusConditionsItems0]


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusAtProvider:
    """
    VirtualClusterObservation defines the observed state of VirtualCluster

    Attributes
    ----------
    arn : str, default is Undefined, optional
        This output contains the ARN of virtual cluster.
    id : str, default is Undefined, optional
        This output contains the virtual cluster ID.
    name : str, default is Undefined, optional
        This output contains the name of the virtual cluster.
    """


    arn?: str

    id?: str

    name?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1VirtualClusterStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


