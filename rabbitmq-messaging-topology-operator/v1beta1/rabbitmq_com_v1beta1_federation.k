"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Federation:
    """
    Federation is the Schema for the federations API

    Attributes
    ----------
    apiVersion : str, default is "rabbitmq.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Federation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RabbitmqComV1beta1FederationSpec, default is Undefined, optional
        spec
    status : RabbitmqComV1beta1FederationStatus, default is Undefined, optional
        status
    """


    apiVersion: "rabbitmq.com/v1beta1" = "rabbitmq.com/v1beta1"

    kind: "Federation" = "Federation"

    metadata?: v1.ObjectMeta

    spec?: RabbitmqComV1beta1FederationSpec

    status?: RabbitmqComV1beta1FederationStatus


schema RabbitmqComV1beta1FederationSpec:
    """
    FederationSpec defines the desired state of Federation For how to configure federation upstreams, see: https://www.rabbitmq.com/federation-reference.html.

    Attributes
    ----------
    ackMode : str, default is Undefined, optional
        ack mode
    exchange : str, default is Undefined, optional
        exchange
    expires : int, default is Undefined, optional
        expires
    maxHops : int, default is Undefined, optional
        max hops
    messageTTL : int, default is Undefined, optional
        message TTL
    name : str, default is Undefined, required
        Required property; cannot be updated
    prefetch_count : int, default is Undefined, optional
        prefetch count
    queue : str, default is Undefined, optional
        queue
    rabbitmqClusterReference : RabbitmqComV1beta1FederationSpecRabbitmqClusterReference, default is Undefined, required
        rabbitmq cluster reference
    reconnectDelay : int, default is Undefined, optional
        reconnect delay
    trustUserId : bool, default is Undefined, optional
        trust user Id
    uriSecret : RabbitmqComV1beta1FederationSpecURISecret, default is Undefined, required
        uri secret
    vhost : str, default is "/", optional
        Default to vhost '/'; cannot be updated
    """


    ackMode?: "on-confirm" | "on-publish" | "no-ack"

    exchange?: str

    expires?: int

    maxHops?: int

    messageTTL?: int

    name: str

    prefetch_count?: int

    queue?: str

    rabbitmqClusterReference: RabbitmqComV1beta1FederationSpecRabbitmqClusterReference

    reconnectDelay?: int

    trustUserId?: bool

    uriSecret: RabbitmqComV1beta1FederationSpecURISecret

    vhost?: str = "/"


schema RabbitmqComV1beta1FederationSpecRabbitmqClusterReference:
    """
    Reference to the RabbitmqCluster that this federation upstream will be created in. Required property.

    Attributes
    ----------
    connectionSecret : RabbitmqComV1beta1FederationSpecRabbitmqClusterReferenceConnectionSecret, default is Undefined, optional
        connection secret
    name : str, default is Undefined, optional
        The name of the RabbitMQ cluster to reference. Have to set either name or connectionSecret, but not both.
    namespace : str, default is Undefined, optional
        The namespace of the RabbitMQ cluster to reference. Defaults to the namespace of the requested resource if omitted.
    """


    connectionSecret?: RabbitmqComV1beta1FederationSpecRabbitmqClusterReferenceConnectionSecret

    name?: str

    namespace?: str


schema RabbitmqComV1beta1FederationSpecRabbitmqClusterReferenceConnectionSecret:
    """
    Secret contains the http management uri for the RabbitMQ cluster. The Secret must contain the key `uri`, `username` and `password` or operator will error. Have to set either name or connectionSecret, but not both.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema RabbitmqComV1beta1FederationSpecURISecret:
    """
    Secret contains the AMQP URI(s) for the upstream. The Secret must contain the key `uri` or operator will error. `uri` should be one or multiple uris separated by ','. Required property.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema RabbitmqComV1beta1FederationStatus:
    """
    FederationStatus defines the observed state of Federation

    Attributes
    ----------
    conditions : [RabbitmqComV1beta1FederationStatusConditionsItems0], default is Undefined, optional
        conditions
    observedGeneration : int, default is Undefined, optional
        observedGeneration is the most recent successful generation observed for this Federation. It corresponds to the Federation's generation, which is updated on mutation by the API Server.
    """


    conditions?: [RabbitmqComV1beta1FederationStatusConditionsItems0]

    observedGeneration?: int


schema RabbitmqComV1beta1FederationStatusConditionsItems0:
    """
    rabbitmq com v1beta1 federation status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        The last time this Condition status changed.
    message : str, default is Undefined, optional
        Full text reason for current status of the condition.
    reason : str, default is Undefined, optional
        One word, camel-case reason for current status of the condition.
    status : str, default is Undefined, required
        True, False, or Unknown
    $type : str, default is Undefined, required
        Type indicates the scope of the custom resource status addressed by the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


