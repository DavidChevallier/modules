"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Policy:
    """
    Policy is the Schema for the policies API

    Attributes
    ----------
    apiVersion : str, default is "rabbitmq.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Policy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RabbitmqComV1beta1PolicySpec, default is Undefined, optional
        spec
    status : RabbitmqComV1beta1PolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "rabbitmq.com/v1beta1" = "rabbitmq.com/v1beta1"

    kind: "Policy" = "Policy"

    metadata?: v1.ObjectMeta

    spec?: RabbitmqComV1beta1PolicySpec

    status?: RabbitmqComV1beta1PolicyStatus


schema RabbitmqComV1beta1PolicySpec:
    """
    PolicySpec defines the desired state of Policy https://www.rabbitmq.com/parameters.html#policies

    Attributes
    ----------
    applyTo : str, default is "all", optional
        What this policy applies to: 'queues', 'exchanges', or 'all'. Default to 'all'.
    definition : any, default is Undefined, required
        Policy definition. Required property.
    name : str, default is Undefined, required
        Required property; cannot be updated
    pattern : str, default is Undefined, required
        Regular expression pattern used to match queues and exchanges, e.g. "^amq.". Required property.
    priority : int, default is Undefined, optional
        Default to '0'. In the event that more than one policy can match a given exchange or queue, the policy with the greatest priority applies.
    rabbitmqClusterReference : RabbitmqComV1beta1PolicySpecRabbitmqClusterReference, default is Undefined, required
        rabbitmq cluster reference
    vhost : str, default is "/", optional
        Default to vhost '/'; cannot be updated
    """


    applyTo?: "queues" | "exchanges" | "all" = "all"

    definition: any

    name: str

    pattern: str

    priority?: int = 0

    rabbitmqClusterReference: RabbitmqComV1beta1PolicySpecRabbitmqClusterReference

    vhost?: str = "/"


schema RabbitmqComV1beta1PolicySpecRabbitmqClusterReference:
    """
    Reference to the RabbitmqCluster that the exchange will be created in. Required property.

    Attributes
    ----------
    connectionSecret : RabbitmqComV1beta1PolicySpecRabbitmqClusterReferenceConnectionSecret, default is Undefined, optional
        connection secret
    name : str, default is Undefined, optional
        The name of the RabbitMQ cluster to reference. Have to set either name or connectionSecret, but not both.
    namespace : str, default is Undefined, optional
        The namespace of the RabbitMQ cluster to reference. Defaults to the namespace of the requested resource if omitted.
    """


    connectionSecret?: RabbitmqComV1beta1PolicySpecRabbitmqClusterReferenceConnectionSecret

    name?: str

    namespace?: str


schema RabbitmqComV1beta1PolicySpecRabbitmqClusterReferenceConnectionSecret:
    """
    Secret contains the http management uri for the RabbitMQ cluster. The Secret must contain the key `uri`, `username` and `password` or operator will error. Have to set either name or connectionSecret, but not both.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema RabbitmqComV1beta1PolicyStatus:
    """
    PolicyStatus defines the observed state of Policy

    Attributes
    ----------
    conditions : [RabbitmqComV1beta1PolicyStatusConditionsItems0], default is Undefined, optional
        conditions
    observedGeneration : int, default is Undefined, optional
        observedGeneration is the most recent successful generation observed for this Policy. It corresponds to the Policy's generation, which is updated on mutation by the API Server.
    """


    conditions?: [RabbitmqComV1beta1PolicyStatusConditionsItems0]

    observedGeneration?: int


schema RabbitmqComV1beta1PolicyStatusConditionsItems0:
    """
    rabbitmq com v1beta1 policy status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        The last time this Condition status changed.
    message : str, default is Undefined, optional
        Full text reason for current status of the condition.
    reason : str, default is Undefined, optional
        One word, camel-case reason for current status of the condition.
    status : str, default is Undefined, required
        True, False, or Unknown
    $type : str, default is Undefined, required
        Type indicates the scope of the custom resource status addressed by the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


