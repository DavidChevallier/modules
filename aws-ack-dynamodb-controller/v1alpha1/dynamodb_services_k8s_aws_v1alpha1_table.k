"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Table:
    """
    Table is the Schema for the Tables API

    Attributes
    ----------
    apiVersion : str, default is "dynamodb.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Table", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DynamodbServicesK8sAwsV1alpha1TableSpec, default is Undefined, optional
        spec
    status : DynamodbServicesK8sAwsV1alpha1TableStatus, default is Undefined, optional
        status
    """


    apiVersion: "dynamodb.services.k8s.aws/v1alpha1" = "dynamodb.services.k8s.aws/v1alpha1"

    kind: "Table" = "Table"

    metadata?: v1.ObjectMeta

    spec?: DynamodbServicesK8sAwsV1alpha1TableSpec

    status?: DynamodbServicesK8sAwsV1alpha1TableStatus


schema DynamodbServicesK8sAwsV1alpha1TableSpec:
    """
    TableSpec defines the desired state of Table.

    Attributes
    ----------
    attributeDefinitions : [DynamodbServicesK8sAwsV1alpha1TableSpecAttributeDefinitionsItems0], default is Undefined, required
        An array of attributes that describe the key schema for the table and indexes.
    billingMode : str, default is Undefined, optional
        Controls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later. 
         * PROVISIONED - We recommend using PROVISIONED for predictable workloads. PROVISIONED sets the billing mode to Provisioned Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual). 
         * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for unpredictable workloads. PAY_PER_REQUEST sets the billing mode to On-Demand Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
    globalSecondaryIndexes : [DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0], default is Undefined, optional
        One or more global secondary indexes (the maximum is 20) to be created on the table. Each global secondary index in the array includes the following: 
         * IndexName - The name of the global secondary index. Must be unique only for this table. 
         * KeySchema - Specifies the key schema for the global secondary index. 
         * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. 
         * ProvisionedThroughput - The provisioned throughput settings for the global secondary index, consisting of read and write capacity units.
    keySchema : [DynamodbServicesK8sAwsV1alpha1TableSpecKeySchemaItems0], default is Undefined, required
        Specifies the attributes that make up the primary key for a table or an index. The attributes in KeySchema must also be defined in the AttributeDefinitions array. For more information, see Data Model (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html) in the Amazon DynamoDB Developer Guide. 
         Each KeySchemaElement in the array is composed of: 
         * AttributeName - The name of this key attribute. 
         * KeyType - The role that the key attribute will assume: HASH - partition key RANGE - sort key 
         The partition key of an item is also known as its hash attribute. The term "hash attribute" derives from the DynamoDB usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. 
         The sort key of an item is also known as its range attribute. The term "range attribute" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value. 
         For a simple primary key (partition key), you must provide exactly one element with a KeyType of HASH. 
         For a composite primary key (partition key and sort key), you must provide exactly two elements, in this order: The first element must have a KeyType of HASH, and the second element must have a KeyType of RANGE. 
         For more information, see Working with Tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key) in the Amazon DynamoDB Developer Guide.
    localSecondaryIndexes : [DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0], default is Undefined, optional
        One or more local secondary indexes (the maximum is 5) to be created on the table. Each index is scoped to a given partition key value. There is a 10 GB size limit per partition key value; otherwise, the size of a local secondary index is unconstrained. 
         Each local secondary index in the array includes the following: 
         * IndexName - The name of the local secondary index. Must be unique only for this table. 
         * KeySchema - Specifies the key schema for the local secondary index. The key schema must begin with the same partition key as the table. 
         * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
    provisionedThroughput : DynamodbServicesK8sAwsV1alpha1TableSpecProvisionedThroughput, default is Undefined, optional
        provisioned throughput
    sseSpecification : DynamodbServicesK8sAwsV1alpha1TableSpecSseSpecification, default is Undefined, optional
        sse specification
    streamSpecification : DynamodbServicesK8sAwsV1alpha1TableSpecStreamSpecification, default is Undefined, optional
        stream specification
    tableClass : str, default is Undefined, optional
        The table class of the new table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
    tableName : str, default is Undefined, required
        The name of the table to create.
    tags : [DynamodbServicesK8sAwsV1alpha1TableSpecTagsItems0], default is Undefined, optional
        A list of key-value pairs to label the table. For more information, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html).
    timeToLive : DynamodbServicesK8sAwsV1alpha1TableSpecTimeToLive, default is Undefined, optional
        time to live
    """


    attributeDefinitions: [DynamodbServicesK8sAwsV1alpha1TableSpecAttributeDefinitionsItems0]

    billingMode?: str

    globalSecondaryIndexes?: [DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0]

    keySchema: [DynamodbServicesK8sAwsV1alpha1TableSpecKeySchemaItems0]

    localSecondaryIndexes?: [DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0]

    provisionedThroughput?: DynamodbServicesK8sAwsV1alpha1TableSpecProvisionedThroughput

    sseSpecification?: DynamodbServicesK8sAwsV1alpha1TableSpecSseSpecification

    streamSpecification?: DynamodbServicesK8sAwsV1alpha1TableSpecStreamSpecification

    tableClass?: str

    tableName: str

    tags?: [DynamodbServicesK8sAwsV1alpha1TableSpecTagsItems0]

    timeToLive?: DynamodbServicesK8sAwsV1alpha1TableSpecTimeToLive


schema DynamodbServicesK8sAwsV1alpha1TableSpecAttributeDefinitionsItems0:
    """
    Represents an attribute for describing the key schema for the table and indexes.

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        attribute name
    attributeType : str, default is Undefined, optional
        attribute type
    """


    attributeName?: str

    attributeType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0:
    """
    Represents the properties of a global secondary index.

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        index name
    keySchema : [DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0KeySchemaItems0], default is Undefined, optional
        key schema
    projection : DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0Projection, default is Undefined, optional
        projection
    provisionedThroughput : DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0ProvisionedThroughput, default is Undefined, optional
        provisioned throughput
    """


    indexName?: str

    keySchema?: [DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0KeySchemaItems0]

    projection?: DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0Projection

    provisionedThroughput?: DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0ProvisionedThroughput


schema DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0KeySchemaItems0:
    """
    Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. 
     A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. 
     A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        attribute name
    keyType : str, default is Undefined, optional
        key type
    """


    attributeName?: str

    keyType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0Projection:
    """
    Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.

    Attributes
    ----------
    nonKeyAttributes : [str], default is Undefined, optional
        non key attributes
    projectionType : str, default is Undefined, optional
        projection type
    """


    nonKeyAttributes?: [str]

    projectionType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecGlobalSecondaryIndexesItems0ProvisionedThroughput:
    """
    Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. 
     For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide.

    Attributes
    ----------
    readCapacityUnits : int, default is Undefined, optional
        read capacity units
    writeCapacityUnits : int, default is Undefined, optional
        write capacity units
    """


    readCapacityUnits?: int

    writeCapacityUnits?: int


schema DynamodbServicesK8sAwsV1alpha1TableSpecKeySchemaItems0:
    """
    Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. 
     A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. 
     A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        attribute name
    keyType : str, default is Undefined, optional
        key type
    """


    attributeName?: str

    keyType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0:
    """
    Represents the properties of a local secondary index.

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        index name
    keySchema : [DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0KeySchemaItems0], default is Undefined, optional
        key schema
    projection : DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0Projection, default is Undefined, optional
        projection
    """


    indexName?: str

    keySchema?: [DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0KeySchemaItems0]

    projection?: DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0Projection


schema DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0KeySchemaItems0:
    """
    Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. 
     A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. 
     A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        attribute name
    keyType : str, default is Undefined, optional
        key type
    """


    attributeName?: str

    keyType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecLocalSecondaryIndexesItems0Projection:
    """
    Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.

    Attributes
    ----------
    nonKeyAttributes : [str], default is Undefined, optional
        non key attributes
    projectionType : str, default is Undefined, optional
        projection type
    """


    nonKeyAttributes?: [str]

    projectionType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecProvisionedThroughput:
    """
    Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. 
     If you set BillingMode as PROVISIONED, you must specify this property. If you set BillingMode as PAY_PER_REQUEST, you cannot specify this property. 
     For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide.

    Attributes
    ----------
    readCapacityUnits : int, default is Undefined, optional
        read capacity units
    writeCapacityUnits : int, default is Undefined, optional
        write capacity units
    """


    readCapacityUnits?: int

    writeCapacityUnits?: int


schema DynamodbServicesK8sAwsV1alpha1TableSpecSseSpecification:
    """
    Represents the settings used to enable server-side encryption.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    kmsMasterKeyID : str, default is Undefined, optional
        kms master key ID
    sseType : str, default is Undefined, optional
        sse type
    """


    enabled?: bool

    kmsMasterKeyID?: str

    sseType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecStreamSpecification:
    """
    The settings for DynamoDB Streams on the table. These settings consist of: 
     * StreamEnabled - Indicates whether DynamoDB Streams is to be enabled (true) or disabled (false). 
     * StreamViewType - When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values for StreamViewType are: KEYS_ONLY - Only the key attributes of the modified item are written to the stream. NEW_IMAGE - The entire item, as it appears after it was modified, is written to the stream. OLD_IMAGE - The entire item, as it appeared before it was modified, is written to the stream. NEW_AND_OLD_IMAGES - Both the new and the old item images of the item are written to the stream.

    Attributes
    ----------
    streamEnabled : bool, default is Undefined, optional
        stream enabled
    streamViewType : str, default is Undefined, optional
        stream view type
    """


    streamEnabled?: bool

    streamViewType?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecTagsItems0:
    """
    Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB table. 
     Amazon Web Services-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. Amazon Web Services-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: in the Cost Allocation Report. You cannot backdate the application of a tag. 
     For an overview on tagging DynamoDB resources, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html) in the Amazon DynamoDB Developer Guide.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema DynamodbServicesK8sAwsV1alpha1TableSpecTimeToLive:
    """
    Represents the settings used to enable or disable Time to Live for the specified table.

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        attribute name
    enabled : bool, default is Undefined, optional
        enabled
    """


    attributeName?: str

    enabled?: bool


schema DynamodbServicesK8sAwsV1alpha1TableStatus:
    """
    TableStatus defines the observed state of Table

    Attributes
    ----------
    ackResourceMetadata : DynamodbServicesK8sAwsV1alpha1TableStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    archivalSummary : DynamodbServicesK8sAwsV1alpha1TableStatusArchivalSummary, default is Undefined, optional
        archival summary
    billingModeSummary : DynamodbServicesK8sAwsV1alpha1TableStatusBillingModeSummary, default is Undefined, optional
        billing mode summary
    conditions : [DynamodbServicesK8sAwsV1alpha1TableStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    creationDateTime : str, default is Undefined, optional
        The date and time when the table was created, in UNIX epoch time (http://www.epochconverter.com/) format.
    globalTableVersion : str, default is Undefined, optional
        Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html) in use, if the table is replicated across Amazon Web Services Regions.
    itemCount : int, default is Undefined, optional
        The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.
    latestStreamARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that uniquely identifies the latest stream for this table.
    latestStreamLabel : str, default is Undefined, optional
        A timestamp, in ISO 8601 format, for this stream. 
         Note that LatestStreamLabel is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique: 
         * Amazon Web Services customer ID 
         * Table name 
         * StreamLabel
    replicas : [DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0], default is Undefined, optional
        Represents replicas of the table.
    restoreSummary : DynamodbServicesK8sAwsV1alpha1TableStatusRestoreSummary, default is Undefined, optional
        restore summary
    sseDescription : DynamodbServicesK8sAwsV1alpha1TableStatusSseDescription, default is Undefined, optional
        sse description
    tableClassSummary : DynamodbServicesK8sAwsV1alpha1TableStatusTableClassSummary, default is Undefined, optional
        table class summary
    tableID : str, default is Undefined, optional
        Unique identifier for the table for which the backup was created.
    tableSizeBytes : int, default is Undefined, optional
        The total size of the specified table, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.
    tableStatus : str, default is Undefined, optional
        The current state of the table: 
         * CREATING - The table is being created. 
         * UPDATING - The table is being updated. 
         * DELETING - The table is being deleted. 
         * ACTIVE - The table is ready for use. 
         * INACCESSIBLE_ENCRYPTION_CREDENTIALS - The KMS key used to encrypt the table in inaccessible. Table operations may fail due to failure to use the KMS key. DynamoDB will initiate the table archival process when a table's KMS key remains inaccessible for more than seven days. 
         * ARCHIVING - The table is being archived. Operations are not allowed until archival is complete. 
         * ARCHIVED - The table has been archived. See the ArchivalReason for more information.
    """


    ackResourceMetadata?: DynamodbServicesK8sAwsV1alpha1TableStatusAckResourceMetadata

    archivalSummary?: DynamodbServicesK8sAwsV1alpha1TableStatusArchivalSummary

    billingModeSummary?: DynamodbServicesK8sAwsV1alpha1TableStatusBillingModeSummary

    conditions?: [DynamodbServicesK8sAwsV1alpha1TableStatusConditionsItems0]

    creationDateTime?: str

    globalTableVersion?: str

    itemCount?: int

    latestStreamARN?: str

    latestStreamLabel?: str

    replicas?: [DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0]

    restoreSummary?: DynamodbServicesK8sAwsV1alpha1TableStatusRestoreSummary

    sseDescription?: DynamodbServicesK8sAwsV1alpha1TableStatusSseDescription

    tableClassSummary?: DynamodbServicesK8sAwsV1alpha1TableStatusTableClassSummary

    tableID?: str

    tableSizeBytes?: int

    tableStatus?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusArchivalSummary:
    """
    Contains information about the table archive.

    Attributes
    ----------
    archivalBackupARN : str, default is Undefined, optional
        archival backup a r n
    archivalDateTime : str, default is Undefined, optional
        archival date time
    archivalReason : str, default is Undefined, optional
        archival reason
    """


    archivalBackupARN?: str

    archivalDateTime?: str

    archivalReason?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusBillingModeSummary:
    """
    Contains the details for the read/write capacity mode.

    Attributes
    ----------
    billingMode : str, default is Undefined, optional
        billing mode
    lastUpdateToPayPerRequestDateTime : str, default is Undefined, optional
        last update to pay per request date time
    """


    billingMode?: str

    lastUpdateToPayPerRequestDateTime?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0:
    """
    Contains the details of the replica.

    Attributes
    ----------
    globalSecondaryIndexes : [DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0], default is Undefined, optional
        global secondary indexes
    kmsMasterKeyID : str, default is Undefined, optional
        kms master key ID
    provisionedThroughputOverride : DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ProvisionedThroughputOverride, default is Undefined, optional
        provisioned throughput override
    regionName : str, default is Undefined, optional
        region name
    replicaInaccessibleDateTime : str, default is Undefined, optional
        replica inaccessible date time
    replicaStatus : str, default is Undefined, optional
        replica status
    replicaStatusDescription : str, default is Undefined, optional
        replica status description
    replicaStatusPercentProgress : str, default is Undefined, optional
        replica status percent progress
    replicaTableClassSummary : DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ReplicaTableClassSummary, default is Undefined, optional
        replica table class summary
    """


    globalSecondaryIndexes?: [DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0]

    kmsMasterKeyID?: str

    provisionedThroughputOverride?: DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ProvisionedThroughputOverride

    regionName?: str

    replicaInaccessibleDateTime?: str

    replicaStatus?: str

    replicaStatusDescription?: str

    replicaStatusPercentProgress?: str

    replicaTableClassSummary?: DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ReplicaTableClassSummary


schema DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0:
    """
    Represents the properties of a replica global secondary index.

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        index name
    provisionedThroughputOverride : DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0ProvisionedThroughputOverride, default is Undefined, optional
        provisioned throughput override
    """


    indexName?: str

    provisionedThroughputOverride?: DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0ProvisionedThroughputOverride


schema DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0GlobalSecondaryIndexesItems0ProvisionedThroughputOverride:
    """
    Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings.

    Attributes
    ----------
    readCapacityUnits : int, default is Undefined, optional
        read capacity units
    """


    readCapacityUnits?: int


schema DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ProvisionedThroughputOverride:
    """
    Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings.

    Attributes
    ----------
    readCapacityUnits : int, default is Undefined, optional
        read capacity units
    """


    readCapacityUnits?: int


schema DynamodbServicesK8sAwsV1alpha1TableStatusReplicasItems0ReplicaTableClassSummary:
    """
    Contains details of the table class.

    Attributes
    ----------
    lastUpdateDateTime : str, default is Undefined, optional
        last update date time
    tableClass : str, default is Undefined, optional
        table class
    """


    lastUpdateDateTime?: str

    tableClass?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusRestoreSummary:
    """
    Contains details for the restore.

    Attributes
    ----------
    restoreDateTime : str, default is Undefined, optional
        restore date time
    restoreInProgress : bool, default is Undefined, optional
        restore in progress
    sourceBackupARN : str, default is Undefined, optional
        source backup a r n
    sourceTableARN : str, default is Undefined, optional
        source table a r n
    """


    restoreDateTime?: str

    restoreInProgress?: bool

    sourceBackupARN?: str

    sourceTableARN?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusSseDescription:
    """
    The description of the server-side encryption status on the specified table.

    Attributes
    ----------
    inaccessibleEncryptionDateTime : str, default is Undefined, optional
        inaccessible encryption date time
    kmsMasterKeyARN : str, default is Undefined, optional
        kms master key a r n
    sseType : str, default is Undefined, optional
        sse type
    status : str, default is Undefined, optional
        status
    """


    inaccessibleEncryptionDateTime?: str

    kmsMasterKeyARN?: str

    sseType?: str

    status?: str


schema DynamodbServicesK8sAwsV1alpha1TableStatusTableClassSummary:
    """
    Contains details of the table class.

    Attributes
    ----------
    lastUpdateDateTime : str, default is Undefined, optional
        last update date time
    tableClass : str, default is Undefined, optional
        table class
    """


    lastUpdateDateTime?: str

    tableClass?: str


