"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema NodePool:
    """
    NodePool is the Schema for the NodePools API

    Attributes
    ----------
    apiVersion : str, default is "karpenter.sh/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KarpenterShV1beta1NodePoolSpec, default is Undefined, optional
        spec
    status : KarpenterShV1beta1NodePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "karpenter.sh/v1beta1" = "karpenter.sh/v1beta1"

    kind: "NodePool" = "NodePool"

    metadata?: v1.ObjectMeta

    spec?: KarpenterShV1beta1NodePoolSpec

    status?: KarpenterShV1beta1NodePoolStatus


schema KarpenterShV1beta1NodePoolSpec:
    """
    NodePoolSpec is the top level provisioner specification. Provisioners launch nodes in response to pods that are unschedulable. A single provisioner is capable of managing a diverse set of nodes. Node properties are determined from a combination of provisioner and pod scheduling constraints.

    Attributes
    ----------
    disruption : KarpenterShV1beta1NodePoolSpecDisruption, default is Undefined, optional
        disruption
    limits : {str:int | str}, default is Undefined, optional
        Limits define a set of bounds for provisioning capacity.
    template : KarpenterShV1beta1NodePoolSpecTemplate, default is Undefined, optional
        template
    weight : int, default is Undefined, optional
        Weight is the priority given to the provisioner during scheduling. A higher numerical weight indicates that this provisioner will be ordered ahead of other provisioners with lower weights. A provisioner with no weight will be treated as if it is a provisioner with a weight of 0.
    """


    disruption?: KarpenterShV1beta1NodePoolSpecDisruption

    limits?: {str:int | str}

    template?: KarpenterShV1beta1NodePoolSpecTemplate

    weight?: int


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        weight <= 100
        weight >= 1


schema KarpenterShV1beta1NodePoolSpecDisruption:
    """
    Disruption contains the parameters that relate to Karpenter's disruption logic

    Attributes
    ----------
    consolidateAfter : str, default is Undefined, optional
        ConsolidateAfter is the duration the controller will wait before attempting to terminate nodes that are underutilized. Refer to ConsolidationPolicy for how underutilization is considered.
    consolidationPolicy : str, default is "WhenUnderutilized", optional
        ConsolidationPolicy describes which nodes Karpenter can disrupt through its consolidation algorithm. This policy defaults to "WhenUnderutilized" if not specified
    expireAfter : str, default is "720h", optional
        ExpireAfter is the duration the controller will wait before terminating a node, measured from when the node is created. This is useful to implement features like eventually consistent node upgrade, memory leak protection, and disruption testing.
    """


    consolidateAfter?: str

    consolidationPolicy?: "WhenEmpty" | "WhenUnderutilized" = "WhenUnderutilized"

    expireAfter?: str = "720h"


    check:
        regex.match(str(consolidateAfter), r"^(([0-9]+(s|m|h))+)|(Never)$") if consolidateAfter
        regex.match(str(expireAfter), r"^(([0-9]+(s|m|h))+)|(Never)$") if expireAfter


schema KarpenterShV1beta1NodePoolSpecTemplate:
    """
    Template contains the template of possibilities for the provisioning logic to launch a NodeClaim with. NodeClaims launched from this NodePool will often be further constrained than the template specifies.

    Attributes
    ----------
    metadata : KarpenterShV1beta1NodePoolSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : KarpenterShV1beta1NodePoolSpecTemplateSpec, default is Undefined, optional
        spec
    """


    metadata?: KarpenterShV1beta1NodePoolSpecTemplateMetadata

    spec?: KarpenterShV1beta1NodePoolSpecTemplateSpec


schema KarpenterShV1beta1NodePoolSpecTemplateMetadata:
    """
    karpenter sh v1beta1 node pool spec template metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


    check:
        all _, n in labels { regex.match(str(n), r"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$") } if labels


schema KarpenterShV1beta1NodePoolSpecTemplateSpec:
    """
    NodeClaimSpec describes the desired state of the NodeClaim

    Attributes
    ----------
    kubelet : KarpenterShV1beta1NodePoolSpecTemplateSpecKubelet, default is Undefined, optional
        kubelet
    nodeClassRef : KarpenterShV1beta1NodePoolSpecTemplateSpecNodeClassRef, default is Undefined, required
        node class ref
    requirements : [KarpenterShV1beta1NodePoolSpecTemplateSpecRequirementsItems0], default is Undefined, required
        Requirements are layered with GetLabels and applied to every node.
    resources : KarpenterShV1beta1NodePoolSpecTemplateSpecResources, default is Undefined, optional
        resources
    startupTaints : [KarpenterShV1beta1NodePoolSpecTemplateSpecStartupTaintsItems0], default is Undefined, optional
        StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.
    taints : [KarpenterShV1beta1NodePoolSpecTemplateSpecTaintsItems0], default is Undefined, optional
        Taints will be applied to the NodeClaim's node.
    """


    kubelet?: KarpenterShV1beta1NodePoolSpecTemplateSpecKubelet

    nodeClassRef: KarpenterShV1beta1NodePoolSpecTemplateSpecNodeClassRef

    requirements: [KarpenterShV1beta1NodePoolSpecTemplateSpecRequirementsItems0]

    resources?: KarpenterShV1beta1NodePoolSpecTemplateSpecResources

    startupTaints?: [KarpenterShV1beta1NodePoolSpecTemplateSpecStartupTaintsItems0]

    taints?: [KarpenterShV1beta1NodePoolSpecTemplateSpecTaintsItems0]


    check:
        len(requirements) <= 30


schema KarpenterShV1beta1NodePoolSpecTemplateSpecKubelet:
    """
    Kubelet defines args to be used when configuring kubelet on provisioned nodes. They are a subset of the upstream types, recognizing not all options may be supported. Wherever possible, the types and names should reflect the upstream kubelet types.

    Attributes
    ----------
    clusterDNS : [str], default is Undefined, optional
        clusterDNS is a list of IP addresses for the cluster DNS server. Note that not all providers may use all addresses.
    cpuCFSQuota : bool, default is Undefined, optional
        CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.
    evictionHard : {str:str}, default is Undefined, optional
        EvictionHard is the map of signal names to quantities that define hard eviction thresholds
    evictionMaxPodGracePeriod : int, default is Undefined, optional
        EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in response to soft eviction thresholds being met.
    evictionSoft : {str:str}, default is Undefined, optional
        EvictionSoft is the map of signal names to quantities that define soft eviction thresholds
    evictionSoftGracePeriod : {str:str}, default is Undefined, optional
        EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal
    imageGCHighThresholdPercent : int, default is Undefined, optional
        ImageGCHighThresholdPercent is the percent of disk usage after which image garbage collection is always run. The percent is calculated by dividing this field value by 100, so this field must be between 0 and 100, inclusive. When specified, the value must be greater than ImageGCLowThresholdPercent.
    imageGCLowThresholdPercent : int, default is Undefined, optional
        ImageGCLowThresholdPercent is the percent of disk usage before which image garbage collection is never run. Lowest disk usage to garbage collect to. The percent is calculated by dividing this field value by 100, so the field value must be between 0 and 100, inclusive. When specified, the value must be less than imageGCHighThresholdPercent
    kubeReserved : {str:int | str}, default is Undefined, optional
        KubeReserved contains resources reserved for Kubernetes system components.
    maxPods : int, default is Undefined, optional
        MaxPods is an override for the maximum number of pods that can run on a worker node instance.
    podsPerCore : int, default is Undefined, optional
        PodsPerCore is an override for the number of pods that can run on a worker node instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if MaxPods is a lower value, that value will be used.
    systemReserved : {str:int | str}, default is Undefined, optional
        SystemReserved contains resources reserved for OS system daemons and kernel memory.
    """


    clusterDNS?: [str]

    cpuCFSQuota?: bool

    evictionHard?: {str:str}

    evictionMaxPodGracePeriod?: int

    evictionSoft?: {str:str}

    evictionSoftGracePeriod?: {str:str}

    imageGCHighThresholdPercent?: int

    imageGCLowThresholdPercent?: int

    kubeReserved?: {str:int | str}

    maxPods?: int

    podsPerCore?: int

    systemReserved?: {str:int | str}


    check:
        all _, n in evictionHard { regex.match(str(n), r"^((\d{1,2}(\.\d{1,2})?|100(\.0{1,2})?)%||(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?)$") } if evictionHard
        all _, n in evictionSoft { regex.match(str(n), r"^((\d{1,2}(\.\d{1,2})?|100(\.0{1,2})?)%||(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?)$") } if evictionSoft
        imageGCHighThresholdPercent <= 100
        imageGCHighThresholdPercent >= 0
        imageGCLowThresholdPercent <= 100
        imageGCLowThresholdPercent >= 0
        all _, n in kubeReserved { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if kubeReserved
        maxPods >= 0
        podsPerCore >= 0
        all _, n in systemReserved { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if systemReserved


schema KarpenterShV1beta1NodePoolSpecTemplateSpecNodeClassRef:
    """
    NodeClassRef is a reference to an object that defines provider specific configuration

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent
    kind : str, default is Undefined, optional
        Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    name : str, default is Undefined, required
        Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    apiVersion?: str

    kind?: str

    name: str


schema KarpenterShV1beta1NodePoolSpecTemplateSpecRequirementsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: "In" | "NotIn" | "Exists" | "DoesNotExist" | "Gt" | "Lt"

    values?: [str]


    check:
        len(key) <= 316
        regex.match(str(key), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$")
        len(values) <= 63
        regex.match(str(values), r"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$") if values


schema KarpenterShV1beta1NodePoolSpecTemplateSpecResources:
    """
    Resources models the resource requirements for the NodeClaim to launch

    Attributes
    ----------
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum required resources for the NodeClaim to launch
    """


    requests?: {str:int | str}


    check:
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema KarpenterShV1beta1NodePoolSpecTemplateSpecStartupTaintsItems0:
    """
    The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: "NoSchedule" | "PreferNoSchedule" | "NoExecute"

    key: str

    timeAdded?: str

    value?: str


    check:
        len(key) >= 1
        regex.match(str(key), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$")
        regex.match(str(value), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$") if value


schema KarpenterShV1beta1NodePoolSpecTemplateSpecTaintsItems0:
    """
    The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: "NoSchedule" | "PreferNoSchedule" | "NoExecute"

    key: str

    timeAdded?: str

    value?: str


    check:
        len(key) >= 1
        regex.match(str(key), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$")
        regex.match(str(value), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$") if value


schema KarpenterShV1beta1NodePoolStatus:
    """
    NodePoolStatus defines the observed state of NodePool

    Attributes
    ----------
    resources : {str:int | str}, default is Undefined, optional
        Resources is the list of resources that have been provisioned.
    """


    resources?: {str:int | str}


    check:
        all _, n in resources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if resources


