"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterPolicy:
    """
    ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.

    Attributes
    ----------
    apiVersion : str, default is "kyverno.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KyvernoIoV1ClusterPolicySpec, default is Undefined, required
        spec
    status : KyvernoIoV1ClusterPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "kyverno.io/v1" = "kyverno.io/v1"

    kind: "ClusterPolicy" = "ClusterPolicy"

    metadata?: v1.ObjectMeta

    spec: KyvernoIoV1ClusterPolicySpec

    status?: KyvernoIoV1ClusterPolicyStatus


schema KyvernoIoV1ClusterPolicySpec:
    """
    Spec declares policy behaviors.

    Attributes
    ----------
    background : bool, default is Undefined, optional
        Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
    failurePolicy : str, default is Undefined, optional
        FailurePolicy defines how unrecognized errors from the admission endpoint are handled. Rules within the same policy share the same failure behavior. Allowed values are Ignore or Fail. Defaults to Fail.
    generateExistingOnPolicyUpdate : bool, default is Undefined, optional
        GenerateExistingOnPolicyUpdate controls wether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
    mutateExistingOnPolicyUpdate : bool, default is Undefined, optional
        MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
    rules : [KyvernoIoV1ClusterPolicySpecRulesItems0], default is Undefined, optional
        Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
    schemaValidation : bool, default is Undefined, optional
        SchemaValidation skips policy validation checks. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
    validationFailureAction : str, default is Undefined, optional
        ValidationFailureAction controls if a validation policy rule failure should disallow the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. The default value is "audit".
    validationFailureActionOverrides : [KyvernoIoV1ClusterPolicySpecValidationFailureActionOverridesItems0], default is Undefined, optional
        ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
    webhookTimeoutSeconds : int, default is Undefined, optional
        WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
    """


    background?: bool

    failurePolicy?: "Ignore" | "Fail"

    generateExistingOnPolicyUpdate?: bool

    mutateExistingOnPolicyUpdate?: bool

    rules?: [KyvernoIoV1ClusterPolicySpecRulesItems0]

    schemaValidation?: bool

    validationFailureAction?: "audit" | "enforce"

    validationFailureActionOverrides?: [KyvernoIoV1ClusterPolicySpecValidationFailureActionOverridesItems0]

    webhookTimeoutSeconds?: int


schema KyvernoIoV1ClusterPolicySpecRulesItems0:
    """
    Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.

    Attributes
    ----------
    context : [KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0], default is Undefined, optional
        Context defines variables and data sources that can be used during rule execution.
    exclude : KyvernoIoV1ClusterPolicySpecRulesItems0Exclude, default is Undefined, optional
        exclude
    generate : KyvernoIoV1ClusterPolicySpecRulesItems0Generate, default is Undefined, optional
        generate
    imageExtractors : {str:[KyvernoIoV1ClusterPolicySpecRulesItems0ImageExtractorsItems0]}, default is Undefined, optional
        ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
    match : KyvernoIoV1ClusterPolicySpecRulesItems0Match, default is Undefined, optional
        match
    mutate : KyvernoIoV1ClusterPolicySpecRulesItems0Mutate, default is Undefined, optional
        mutate
    name : str, default is Undefined, optional
        Name is a label to identify the rule, It must be unique within the policy.
    preconditions : any, default is Undefined, optional
        Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/
    validate : KyvernoIoV1ClusterPolicySpecRulesItems0Validate, default is Undefined, optional
        validate
    verifyImages : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0], default is Undefined, optional
        VerifyImages is used to verify image signatures and mutate them to add a digest
    """


    context?: [KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0]

    exclude?: KyvernoIoV1ClusterPolicySpecRulesItems0Exclude

    generate?: KyvernoIoV1ClusterPolicySpecRulesItems0Generate

    imageExtractors?: {str:[KyvernoIoV1ClusterPolicySpecRulesItems0ImageExtractorsItems0]}

    match?: KyvernoIoV1ClusterPolicySpecRulesItems0Match

    mutate?: KyvernoIoV1ClusterPolicySpecRulesItems0Mutate

    name?: str

    preconditions?: any

    validate?: KyvernoIoV1ClusterPolicySpecRulesItems0Validate

    verifyImages?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0]


    check:
        len(name) <= 63


schema KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0:
    """
    ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.

    Attributes
    ----------
    apiCall : KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0APICall, default is Undefined, optional
        api call
    configMap : KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ConfigMap, default is Undefined, optional
        config map
    imageRegistry : KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ImageRegistry, default is Undefined, optional
        image registry
    name : str, default is Undefined, optional
        Name is the variable name.
    variable : KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0Variable, default is Undefined, optional
        variable
    """


    apiCall?: KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0APICall

    configMap?: KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ConfigMap

    imageRegistry?: KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ImageRegistry

    name?: str

    variable?: KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0Variable


schema KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0APICall:
    """
    APICall defines an HTTP request to the Kubernetes API server. The JSON data retrieved is stored in the context.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the API server. For example a JMESPath of "items | length(@)" applied to the API server response to the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
    urlPath : str, default is Undefined, required
        URLPath is the URL path to be used in the HTTP GET request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command.
    """


    jmesPath?: str

    urlPath: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ConfigMap:
    """
    ConfigMap is the ConfigMap reference.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the ConfigMap name.
    namespace : str, default is Undefined, optional
        Namespace is the ConfigMap namespace.
    """


    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0ImageRegistry:
    """
    ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
    reference : str, default is Undefined, required
        Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest
    """


    jmesPath?: str

    reference: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ContextItems0Variable:
    """
    Variable defines an arbitrary JMESPath context variable that can be defined inline.

    Attributes
    ----------
    default : any, default is Undefined, optional
        Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JMESPath Expression that can be used to transform the variable.
    value : any, default is Undefined, optional
        Value is any arbitrary JSON object representable in YAML or JSON form.
    """


    default?: any

    jmesPath?: str

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0Exclude:
    """
    ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.

    Attributes
    ----------
    $all : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0], default is Undefined, optional
        All allows specifying resources which will be ANDed
    any : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0], default is Undefined, optional
        Any allows specifying resources which will be ORed
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeSubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    $all?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0]

    any?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0]

    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeSubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0:
    """
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0SubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0Resources:
    """
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0ResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAllItems0SubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0:
    """
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0SubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0Resources:
    """
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeAnyItems0SubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResources:
    """
    ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ExcludeSubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0Generate:
    """
    Generation is used to create new resources.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion specifies resource apiVersion.
    clone : KyvernoIoV1ClusterPolicySpecRulesItems0GenerateClone, default is Undefined, optional
        clone
    data : any, default is Undefined, optional
        Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
    kind : str, default is Undefined, optional
        Kind specifies resource kind.
    name : str, default is Undefined, optional
        Name specifies the resource name.
    namespace : str, default is Undefined, optional
        Namespace specifies resource namespace.
    synchronize : bool, default is Undefined, optional
        Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
    """


    apiVersion?: str

    clone?: KyvernoIoV1ClusterPolicySpecRulesItems0GenerateClone

    data?: any

    kind?: str

    name?: str

    namespace?: str

    synchronize?: bool


schema KyvernoIoV1ClusterPolicySpecRulesItems0GenerateClone:
    """
    Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name specifies name of the resource.
    namespace : str, default is Undefined, optional
        Namespace specifies source resource namespace.
    """


    name?: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ImageExtractorsItems0:
    """
    kyverno io v1 cluster policy spec rules items0 image extractors items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
    name : str, default is Undefined, optional
        Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
    path : str, default is Undefined, required
        Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
    value : str, default is Undefined, optional
        Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
    """


    key?: str

    name?: str

    path: str

    value?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0Match:
    """
    MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.

    Attributes
    ----------
    $all : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0], default is Undefined, optional
        All allows specifying resources which will be ANDed
    any : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0], default is Undefined, optional
        Any allows specifying resources which will be ORed
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0MatchResources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchSubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    $all?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0]

    any?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0]

    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchResources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchSubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0:
    """
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0SubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0Resources:
    """
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0ResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAllItems0SubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0:
    """
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0SubjectsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0Resources:
    """
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0ResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchAnyItems0SubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchResources:
    """
    ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
    selector : KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelector

    namespaces?: [str]

    selector?: KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelector


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelector:
    """
    NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelector:
    """
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchResourcesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MatchSubjectsItems0:
    """
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0Mutate:
    """
    Mutation is used to modify matching resources.

    Attributes
    ----------
    foreach : [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0], default is Undefined, optional
        ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
    patchStrategicMerge : any, default is Undefined, optional
        PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
    patchesJson6902 : str, default is Undefined, optional
        PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
    targets : [KyvernoIoV1ClusterPolicySpecRulesItems0MutateTargetsItems0], default is Undefined, optional
        Targets defines the target resources to be mutated.
    """


    foreach?: [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0]

    patchStrategicMerge?: any

    patchesJson6902?: str

    targets?: [KyvernoIoV1ClusterPolicySpecRulesItems0MutateTargetsItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0:
    """
    ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.

    Attributes
    ----------
    context : [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0], default is Undefined, optional
        Context defines variables and data sources that can be used during rule execution.
    list : str, default is Undefined, optional
        List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
    patchStrategicMerge : any, default is Undefined, optional
        PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
    patchesJson6902 : str, default is Undefined, optional
        PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
    preconditions : KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0Preconditions, default is Undefined, optional
        preconditions
    """


    context?: [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0]

    list?: str

    patchStrategicMerge?: any

    patchesJson6902?: str

    preconditions?: KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0Preconditions


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0:
    """
    ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.

    Attributes
    ----------
    apiCall : KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0APICall, default is Undefined, optional
        api call
    configMap : KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ConfigMap, default is Undefined, optional
        config map
    imageRegistry : KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ImageRegistry, default is Undefined, optional
        image registry
    name : str, default is Undefined, optional
        Name is the variable name.
    variable : KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0Variable, default is Undefined, optional
        variable
    """


    apiCall?: KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0APICall

    configMap?: KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ConfigMap

    imageRegistry?: KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ImageRegistry

    name?: str

    variable?: KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0Variable


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0APICall:
    """
    APICall defines an HTTP request to the Kubernetes API server. The JSON data retrieved is stored in the context.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the API server. For example a JMESPath of "items | length(@)" applied to the API server response to the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
    urlPath : str, default is Undefined, required
        URLPath is the URL path to be used in the HTTP GET request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command.
    """


    jmesPath?: str

    urlPath: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ConfigMap:
    """
    ConfigMap is the ConfigMap reference.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the ConfigMap name.
    namespace : str, default is Undefined, optional
        Namespace is the ConfigMap namespace.
    """


    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0ImageRegistry:
    """
    ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
    reference : str, default is Undefined, required
        Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest
    """


    jmesPath?: str

    reference: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0ContextItems0Variable:
    """
    Variable defines an arbitrary JMESPath context variable that can be defined inline.

    Attributes
    ----------
    default : any, default is Undefined, optional
        Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JMESPath Expression that can be used to transform the variable.
    value : any, default is Undefined, optional
        Value is any arbitrary JSON object representable in YAML or JSON form.
    """


    default?: any

    jmesPath?: str

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0Preconditions:
    """
    AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/

    Attributes
    ----------
    $all : [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAllItems0], default is Undefined, optional
        AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
    any : [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAnyItems0], default is Undefined, optional
        AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
    """


    $all?: [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAllItems0]

    any?: [KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAnyItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAllItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateForeachItems0PreconditionsAnyItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0MutateTargetsItems0:
    """
    kyverno io v1 cluster policy spec rules items0 mutate targets items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion specifies resource apiVersion.
    kind : str, default is Undefined, optional
        Kind specifies resource kind.
    name : str, default is Undefined, optional
        Name specifies the resource name.
    namespace : str, default is Undefined, optional
        Namespace specifies resource namespace.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0Validate:
    """
    Validation is used to validate matching resources.

    Attributes
    ----------
    anyPattern : any, default is Undefined, optional
        AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
    deny : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateDeny, default is Undefined, optional
        deny
    foreach : [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0], default is Undefined, optional
        ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
    message : str, default is Undefined, optional
        Message specifies a custom message to be displayed on failure.
    pattern : any, default is Undefined, optional
        Pattern specifies an overlay-style pattern used to check resources.
    """


    anyPattern?: any

    deny?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateDeny

    foreach?: [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0]

    message?: str

    pattern?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateDeny:
    """
    Deny defines conditions used to pass or fail a validation rule.

    Attributes
    ----------
    conditions : any, default is Undefined, optional
        Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules
    """


    conditions?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0:
    """
    ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.

    Attributes
    ----------
    anyPattern : any, default is Undefined, optional
        AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
    context : [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0], default is Undefined, optional
        Context defines variables and data sources that can be used during rule execution.
    deny : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Deny, default is Undefined, optional
        deny
    elementScope : bool, default is Undefined, optional
        ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
    list : str, default is Undefined, optional
        List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
    pattern : any, default is Undefined, optional
        Pattern specifies an overlay-style pattern used to check resources.
    preconditions : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Preconditions, default is Undefined, optional
        preconditions
    """


    anyPattern?: any

    context?: [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0]

    deny?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Deny

    elementScope?: bool

    list?: str

    pattern?: any

    preconditions?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Preconditions


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0:
    """
    ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.

    Attributes
    ----------
    apiCall : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0APICall, default is Undefined, optional
        api call
    configMap : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ConfigMap, default is Undefined, optional
        config map
    imageRegistry : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ImageRegistry, default is Undefined, optional
        image registry
    name : str, default is Undefined, optional
        Name is the variable name.
    variable : KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0Variable, default is Undefined, optional
        variable
    """


    apiCall?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0APICall

    configMap?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ConfigMap

    imageRegistry?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ImageRegistry

    name?: str

    variable?: KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0Variable


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0APICall:
    """
    APICall defines an HTTP request to the Kubernetes API server. The JSON data retrieved is stored in the context.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the API server. For example a JMESPath of "items | length(@)" applied to the API server response to the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
    urlPath : str, default is Undefined, required
        URLPath is the URL path to be used in the HTTP GET request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command.
    """


    jmesPath?: str

    urlPath: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ConfigMap:
    """
    ConfigMap is the ConfigMap reference.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the ConfigMap name.
    namespace : str, default is Undefined, optional
        Namespace is the ConfigMap namespace.
    """


    name: str

    namespace?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0ImageRegistry:
    """
    ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
    reference : str, default is Undefined, required
        Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest
    """


    jmesPath?: str

    reference: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0ContextItems0Variable:
    """
    Variable defines an arbitrary JMESPath context variable that can be defined inline.

    Attributes
    ----------
    default : any, default is Undefined, optional
        Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JMESPath Expression that can be used to transform the variable.
    value : any, default is Undefined, optional
        Value is any arbitrary JSON object representable in YAML or JSON form.
    """


    default?: any

    jmesPath?: str

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Deny:
    """
    Deny defines conditions used to pass or fail a validation rule.

    Attributes
    ----------
    conditions : any, default is Undefined, optional
        Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules
    """


    conditions?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0Preconditions:
    """
    AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/

    Attributes
    ----------
    $all : [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAllItems0], default is Undefined, optional
        AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
    any : [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAnyItems0], default is Undefined, optional
        AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
    """


    $all?: [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAllItems0]

    any?: [KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAnyItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAllItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0ValidateForeachItems0PreconditionsAnyItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0:
    """
    ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.

    Attributes
    ----------
    additionalExtensions : {str:str}, default is Undefined, optional
        AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
    annotations : {str:str}, default is Undefined, optional
        Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
    attestations : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0], default is Undefined, optional
        Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
    attestors : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0], default is Undefined, optional
        Attestors specified the required attestors (i.e. authorities)
    image : str, default is Undefined, optional
        Image is the image name consisting of the registry address, repository, image, and tag. Wildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.
    imageReferences : [str], default is Undefined, optional
        ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.
    issuer : str, default is Undefined, optional
        Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
    key : str, default is Undefined, optional
        Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
    mutateDigest : bool, default is True, optional
        MutateDigest enables replacement of image tags with digests. Defaults to true.
    repository : str, default is Undefined, optional
        Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
    required : bool, default is True, optional
        Required validates that images are verified i.e. have matched passed a signature or attestation check.
    roots : str, default is Undefined, optional
        Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
    subject : str, default is Undefined, optional
        Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
    verifyDigest : bool, default is True, optional
        VerifyDigest validates that images have a digest.
    """


    additionalExtensions?: {str:str}

    annotations?: {str:str}

    attestations?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0]

    attestors?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0]

    image?: str

    imageReferences?: [str]

    issuer?: str

    key?: str

    mutateDigest?: bool = True

    repository?: str

    required?: bool = True

    roots?: str

    subject?: str

    verifyDigest?: bool = True


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0:
    """
    Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.

    Attributes
    ----------
    conditions : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0], default is Undefined, optional
        Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
    predicateType : str, default is Undefined, optional
        PredicateType defines the type of Predicate contained within the Statement.
    """


    conditions?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0]

    predicateType?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0:
    """
    AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.

    Attributes
    ----------
    $all : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AllItems0], default is Undefined, optional
        AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
    any : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AnyItems0], default is Undefined, optional
        AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
    """


    $all?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AllItems0]

    any?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AnyItems0]


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AllItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestationsItems0ConditionsItems0AnyItems0:
    """
    Condition defines variable-based conditional criteria for rule execution.

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
    """


    key?: any

    operator?: "Equals" | "NotEquals" | "In" | "AnyIn" | "AllIn" | "NotIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0:
    """
    kyverno io v1 cluster policy spec rules items0 verify images items0 attestors items0

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
    entries : [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0], default is Undefined, optional
        Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
    """


    count?: int

    entries?: [KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0]


    check:
        count >= 1


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0:
    """
    kyverno io v1 cluster policy spec rules items0 verify images items0 attestors items0 entries items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
    attestor : any, default is Undefined, optional
        Attestor is a nested AttestorSet used to specify a more complex set of match authorities
    certificates : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Certificates, default is Undefined, optional
        certificates
    keyless : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keyless, default is Undefined, optional
        keyless
    keys : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keys, default is Undefined, optional
        keys
    repository : str, default is Undefined, optional
        Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
    """


    annotations?: {str:str}

    attestor?: any

    certificates?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Certificates

    keyless?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keyless

    keys?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keys

    repository?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Certificates:
    """
    Certificates specifies one or more certificates

    Attributes
    ----------
    cert : str, default is Undefined, optional
        Certificate is an optional PEM encoded public certificate.
    certChain : str, default is Undefined, optional
        CertificateChain is an optional PEM encoded set of certificates used to verify
    rekor : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0CertificatesRekor, default is Undefined, optional
        rekor
    """


    cert?: str

    certChain?: str

    rekor?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0CertificatesRekor


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0CertificatesRekor:
    """
    Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.

    Attributes
    ----------
    url : str, default is Undefined, required
        URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
    """


    url: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keyless:
    """
    Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.

    Attributes
    ----------
    additionalExtensions : {str:str}, default is Undefined, optional
        AdditionalExtensions are certificate-extensions used for keyless signing.
    issuer : str, default is Undefined, optional
        Issuer is the certificate issuer used for keyless signing.
    rekor : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeylessRekor, default is Undefined, optional
        rekor
    roots : str, default is Undefined, optional
        Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
    subject : str, default is Undefined, optional
        Subject is the verified identity used for keyless signing, for example the email address
    """


    additionalExtensions?: {str:str}

    issuer?: str

    rekor?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeylessRekor

    roots?: str

    subject?: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeylessRekor:
    """
    Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.

    Attributes
    ----------
    url : str, default is Undefined, required
        URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
    """


    url: str


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0Keys:
    """
    Keys specifies one or more public keys

    Attributes
    ----------
    publicKeys : str, default is Undefined, optional
        Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
    rekor : KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeysRekor, default is Undefined, optional
        rekor
    """


    publicKeys?: str

    rekor?: KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeysRekor


schema KyvernoIoV1ClusterPolicySpecRulesItems0VerifyImagesItems0AttestorsItems0EntriesItems0KeysRekor:
    """
    Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.

    Attributes
    ----------
    url : str, default is Undefined, required
        URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
    """


    url: str


schema KyvernoIoV1ClusterPolicySpecValidationFailureActionOverridesItems0:
    """
    kyverno io v1 cluster policy spec validation failure action overrides items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        ValidationFailureAction defines the policy validation failure action
    namespaces : [str], default is Undefined, optional
        namespaces
    """


    action?: "audit" | "enforce"

    namespaces?: [str]


schema KyvernoIoV1ClusterPolicyStatus:
    """
    Status contains policy runtime data.

    Attributes
    ----------
    conditions : [KyvernoIoV1ClusterPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions is a list of conditions that apply to the policy
    ready : bool, default is Undefined, required
        Ready indicates if the policy is ready to serve the admission request. Deprecated in favor of Conditions
    """


    conditions?: [KyvernoIoV1ClusterPolicyStatusConditionsItems0]

    ready: bool


schema KyvernoIoV1ClusterPolicyStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


