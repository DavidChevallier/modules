"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Elasticsearch:
    """
    Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.

    Attributes
    ----------
    apiVersion : str, default is "elasticsearch.k8s.elastic.co/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Elasticsearch", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpec, default is Undefined, optional
        spec
    status : ElasticsearchK8sElasticCoV1beta1ElasticsearchStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticsearch.k8s.elastic.co/v1beta1" = "elasticsearch.k8s.elastic.co/v1beta1"

    kind: "Elasticsearch" = "Elasticsearch"

    metadata?: v1.ObjectMeta

    spec?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpec

    status?: ElasticsearchK8sElasticCoV1beta1ElasticsearchStatus


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpec:
    """
    ElasticsearchSpec holds the specification of an Elasticsearch cluster.

    Attributes
    ----------
    http : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTP, default is Undefined, optional
        http
    image : str, default is Undefined, optional
        Image is the Elasticsearch Docker image to deploy.
    nodeSets : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0], default is Undefined, required
        NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.
    podDisruptionBudget : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    secureSettings : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0], default is Undefined, optional
        SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.
    updateStrategy : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategy, default is Undefined, optional
        update strategy
    version : str, default is Undefined, optional
        Version of Elasticsearch.
    """


    http?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTP

    image?: str

    nodeSets: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0]

    podDisruptionBudget?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudget

    secureSettings?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0]

    updateStrategy?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategy

    version?: str


    check:
        len(nodeSets) >= 1


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTP:
    """
    HTTP holds HTTP layer settings for Elasticsearch.

    Attributes
    ----------
    service : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPService, default is Undefined, optional
        service
    tls : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLS, default is Undefined, optional
        tls
    """


    service?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPService

    tls?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLS


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPService:
    """
    Service defines the template for the associated Kubernetes Service object.

    Attributes
    ----------
    metadata : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceMetadata, default is Undefined, optional
        metadata
    spec : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpec, default is Undefined, optional
        spec
    """


    metadata?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceMetadata

    spec?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpec


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceMetadata:
    """
    ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpec:
    """
    Spec is the specification of the service.

    Attributes
    ----------
    allocateLoadBalancerNodePorts : bool, default is Undefined, optional
        allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is "true". It may be set to "false" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type. This field is beta-level and is only honored by servers that enable the ServiceLBNodePortControl feature.
    clusterIP : str, default is Undefined, optional
        clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are "None", empty string (""), or a valid IP address. Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    clusterIPs : [str], default is Undefined, optional
        ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are "None", empty string (""), or a valid IP address.  Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value. 
         This field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    externalIPs : [str], default is Undefined, optional
        externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
    externalName : str, default is Undefined, optional
        externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
    externalTrafficPolicy : str, default is Undefined, optional
        externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
    healthCheckNodePort : int, default is Undefined, optional
        healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type).
    internalTrafficPolicy : str, default is Undefined, optional
        InternalTrafficPolicy specifies if the cluster internal traffic should be routed to all endpoints or node-local endpoints only. "Cluster" routes internal traffic to a Service to all endpoints. "Local" routes traffic to node-local endpoints only, traffic is dropped if no node-local endpoints are ready. The default value is "Cluster".
    ipFamilies : [str], default is Undefined, optional
        IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are "IPv4" and "IPv6".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to "headless" services. This field will be wiped when updating a Service to type ExternalName. 
         This field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
    ipFamilyPolicy : str, default is Undefined, optional
        IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be "SingleStack" (a single IP family), "PreferDualStack" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or "RequireDualStack" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.
    loadBalancerClass : str, default is Undefined, optional
        loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
    loadBalancerIP : str, default is Undefined, optional
        Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
    loadBalancerSourceRanges : [str], default is Undefined, optional
        If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
    ports : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecPortsItems0], default is Undefined, optional
        The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    publishNotReadyAddresses : bool, default is Undefined, optional
        publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered "ready" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.
    selector : {str:str}, default is Undefined, optional
        Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
    sessionAffinity : str, default is Undefined, optional
        Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    sessionAffinityConfig : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfig, default is Undefined, optional
        session affinity config
    $type : str, default is Undefined, optional
        type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. "ExternalName" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    """


    allocateLoadBalancerNodePorts?: bool

    clusterIP?: str

    clusterIPs?: [str]

    externalIPs?: [str]

    externalName?: str

    externalTrafficPolicy?: str

    healthCheckNodePort?: int

    internalTrafficPolicy?: str

    ipFamilies?: [str]

    ipFamilyPolicy?: str

    loadBalancerClass?: str

    loadBalancerIP?: str

    loadBalancerSourceRanges?: [str]

    ports?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecPortsItems0]

    publishNotReadyAddresses?: bool

    selector?: {str:str}

    sessionAffinity?: str

    sessionAffinityConfig?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfig

    $type?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecPortsItems0:
    """
    ServicePort contains information on service's port.

    Attributes
    ----------
    appProtocol : str, default is Undefined, optional
        The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
    name : str, default is Undefined, optional
        The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
    nodePort : int, default is Undefined, optional
        The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    port : int, default is Undefined, required
        The port that will be exposed by this service.
    $protocol : str, default is "TCP", optional
        The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
    targetPort : int | str, default is Undefined, optional
        Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    """


    appProtocol?: str

    name?: str

    nodePort?: int

    port: int

    $protocol?: str = "TCP"

    targetPort?: int | str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfig:
    """
    sessionAffinityConfig contains the configurations of session affinity.

    Attributes
    ----------
    clientIP : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfigClientIP, default is Undefined, optional
        client IP
    """


    clientIP?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfigClientIP


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPServiceSpecSessionAffinityConfigClientIP:
    """
    clientIP contains the configurations of Client IP based session affinity.

    Attributes
    ----------
    timeoutSeconds : int, default is Undefined, optional
        timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
    """


    timeoutSeconds?: int


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLS:
    """
    TLS defines options for configuring TLS for HTTP.

    Attributes
    ----------
    certificate : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSCertificate, default is Undefined, optional
        certificate
    selfSignedCertificate : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificate, default is Undefined, optional
        self signed certificate
    """


    certificate?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSCertificate

    selfSignedCertificate?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificate


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSCertificate:
    """
    Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following: 
     - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        SecretName is the name of the secret.
    """


    secretName?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificate:
    """
    SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
    subjectAltNames : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificateSubjectAltNamesItems0], default is Undefined, optional
        SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
    """


    disabled?: bool

    subjectAltNames?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificateSubjectAltNamesItems0]


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecHTTPTLSSelfSignedCertificateSubjectAltNamesItems0:
    """
    SubjectAlternativeName represents a SAN entry in a x509 certificate.

    Attributes
    ----------
    dns : str, default is Undefined, optional
        DNS is the DNS name of the subject.
    ip : str, default is Undefined, optional
        IP is the IP address of the subject.
    """


    dns?: str

    ip?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0:
    """
    NodeSet is the specification for a group of Elasticsearch nodes sharing the same configuration and a Pod template.

    Attributes
    ----------
    config : any, default is Undefined, optional
        Config holds the Elasticsearch configuration.
    count : int, default is Undefined, required
        Count of Elasticsearch nodes to deploy.
    name : str, default is Undefined, required
        Name of this set of nodes. Becomes a part of the Elasticsearch node.name setting.
    podTemplate : any, default is Undefined, optional
        PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
    volumeClaimTemplates : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0], default is Undefined, optional
        VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod in this NodeSet. Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate. Items defined here take precedence over any default claims added by the operator with the same name.
    """


    config?: any

    count: int

    name: str

    podTemplate?: any

    volumeClaimTemplates?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0]


    check:
        count >= 1
        len(name) <= 23
        regex.match(str(name), r"[a-zA-Z0-9-]+")


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0:
    """
    PersistentVolumeClaim is a user's request for and claim to a persistent volume

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Metadata, default is Undefined, optional
        metadata
    spec : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Spec, default is Undefined, optional
        spec
    status : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Status, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Metadata

    spec?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Spec

    status?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Status


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Metadata:
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Spec:
    """
    Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecResources, default is Undefined, optional
        resources
    selector : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        VolumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSource

    dataSourceRef?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSourceRef

    resources?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecResources

    selector?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSource:
    """
    This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecDataSourceRef:
    """
    Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecResources:
    """
    Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelector:
    """
    A label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0Status:
    """
    Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        The storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        Represents the actual resources of the underlying volume.
    conditions : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0StatusConditionsItems0], default is Undefined, optional
        Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        Phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        ResizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0StatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecNodeSetsItems0VolumeClaimTemplatesItems0StatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        Last time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudget:
    """
    PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).

    Attributes
    ----------
    metadata : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetMetadata, default is Undefined, optional
        metadata
    spec : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpec, default is Undefined, optional
        spec
    """


    metadata?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetMetadata

    spec?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpec


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetMetadata:
    """
    ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpec:
    """
    Spec is the specification of the PDB.

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
    selector : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelector, default is Undefined, optional
        selector
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selector?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelector


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelector:
    """
    Label query over pods whose evictions are managed by the disruption budget. A null selector selects no pods. An empty selector ({}) also selects no pods, which differs from standard behavior of selecting all pods. In policy/v1, an empty selector will select all pods in the namespace.

    Attributes
    ----------
    matchExpressions : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0:
    """
    SecretSource defines a data source based on a Kubernetes Secret.

    Attributes
    ----------
    entries : [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0EntriesItems0], default is Undefined, optional
        Entries define how to project each key-value pair in the secret to filesystem paths. If not defined, all keys will be projected to similarly named paths in the filesystem. If defined, only the specified keys will be projected to the corresponding paths.
    secretName : str, default is Undefined, required
        SecretName is the name of the secret.
    """


    entries?: [ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0EntriesItems0]

    secretName: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecSecureSettingsItems0EntriesItems0:
    """
    KeyToPath defines how to map a key in a Secret object to a filesystem path.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key contained in the secret.
    path : str, default is Undefined, optional
        Path is the relative file path to map the key to. Path must not be an absolute file path and must not contain any ".." components.
    """


    key: str

    path?: str


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategy:
    """
    UpdateStrategy specifies how updates to the cluster should be performed.

    Attributes
    ----------
    changeBudget : ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategyChangeBudget, default is Undefined, optional
        change budget
    """


    changeBudget?: ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategyChangeBudget


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchSpecUpdateStrategyChangeBudget:
    """
    ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.

    Attributes
    ----------
    maxSurge : int, default is Undefined, optional
        MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification. MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.
    maxUnavailable : int, default is Undefined, optional
        MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator. Setting a negative value will disable this restriction. Defaults to 1 if not specified.
    """


    maxSurge?: int

    maxUnavailable?: int


schema ElasticsearchK8sElasticCoV1beta1ElasticsearchStatus:
    """
    ElasticsearchStatus defines the observed state of Elasticsearch

    Attributes
    ----------
    availableNodes : int, default is Undefined, optional
        available nodes
    health : str, default is Undefined, optional
        ElasticsearchHealth is the health of the cluster as returned by the health API.
    phase : str, default is Undefined, optional
        ElasticsearchOrchestrationPhase is the phase Elasticsearch is in from the controller point of view.
    """


    availableNodes?: int

    health?: str

    phase?: str


